-- Karker Hub Ultra — Final Boss Edition (LocalScript)
-- Place in StarterPlayerScripts or StarterGui
-- All-in-one: loading, rainbow border, mobile+pc drag, special sauce, float, esp, teleport, notifications, sounds, easter eggs

-- Services
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TeleportService = game:GetService("TeleportService")
local Debris = game:GetService("Debris")
local SoundService = game:GetService("SoundService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- ========= Configuration (swap these IDs later with your uploaded YouTube audio) =========
local CONF = {
    bgMusic = "rbxassetid://1846133381",    -- placeholder loop
    clickSfx = "rbxassetid://2101148",     -- placeholder click
    notifSfx = "rbxassetid://138186576",   -- placeholder notification
    rickroll = "rbxassetid://184614231",   -- placeholder rickroll (replace if you want)
    hoverSfx = "rbxassetid://146069018",   -- placeholder hover
    accentColor = Color3.fromRGB(255, 60, 60),
    hubBg = Color3.fromRGB(10,10,12),
    rainbowSpeed = 1.2,
    defaultAuraRadius = 14,
}

-- ========= State =========
local STATE = {
    destroyed = false,
    parts = {},
    conns = {},
    esp = {enabled = false, boxParts = {}},
    float = {enabled = false, att = nil, vf = nil, strength = 0.55},
    special = {active = false, auraPart = nil, scannerConn = nil, radius = CONF.defaultAuraRadius},
    gui = nil,
    notifGui = nil,
    clickCount = 0,
    lastClickTime = 0,
    sounds = {}
}

-- ========= Utilities =========
local function makeSound(id, vol, loop)
    local s = Instance.new("Sound")
    s.SoundId = id
    s.Volume = vol or 1
    s.Looped = (loop == true)
    s.Parent = SoundService
    return s
end

local function safeChar() return player.Character or player.CharacterAdded:Wait() end

local function tween(obj, time, props, style, dir)
    style = style or Enum.EasingStyle.Quad
    dir = dir or Enum.EasingDirection.Out
    local info = TweenInfo.new(time, style, dir)
    local t = TweenService:Create(obj, info, props)
    t:Play()
    return t
end

local function newUICorner(parent, radius)
    local c = Instance.new("UICorner")
    c.CornerRadius = UDim.new(0, radius or 12)
    c.Parent = parent
    return c
end

local function newStroke(parent, col, thick)
    local s = Instance.new("UIStroke", parent)
    s.Color = col or Color3.fromRGB(30,30,30)
    s.Thickness = thick or 1
    s.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    return s
end

-- precreate default sounds
STATE.sounds.bg = makeSound(CONF.bgMusic, 0.45, true)
STATE.sounds.click = makeSound(CONF.clickSfx, 0.9, false)
STATE.sounds.notif = makeSound(CONF.notifSfx, 1, false)
STATE.sounds.rick = makeSound(CONF.rickroll, 0.7, false)
STATE.sounds.hover = makeSound(CONF.hoverSfx, 0.6, false)
pcall(function() STATE.sounds.bg:Play() end)

-- ========= Notifications (bottom-left) =========
local function createNotifGui()
    local g = Instance.new("ScreenGui", playerGui)
    g.Name = "KH_NotifGui"
    g.ResetOnSpawn = false

    local holder = Instance.new("Frame", g)
    holder.Name = "Holder"
    holder.AnchorPoint = Vector2.new(0,1)
    holder.Position = UDim2.new(0, 12, 1, -12)
    holder.Size = UDim2.new(0, 360, 0, 420)
    holder.BackgroundTransparency = 1

    local layout = Instance.new("UIListLayout", holder)
    layout.SortOrder = Enum.SortOrder.LayoutOrder
    layout.Padding = UDim.new(0, 8)

    return g, holder
end

local notifGui, notifHolder = createNotifGui()
STATE.notifGui = notifGui

local function playNotif()
    pcall(function() STATE.sounds.notif:Play() end)
end

local function notify(title, text, dur)
    dur = dur or 3
    if STATE.destroyed then return end
    local frame = Instance.new("Frame", notifHolder)
    frame.Size = UDim2.new(1,0,0,0)
    frame.BackgroundColor3 = Color3.fromRGB(12,12,14)
    newUICorner(frame, 10)
    newStroke(frame, CONF.accentColor, 1)

    local icon = Instance.new("TextLabel", frame)
    icon.Size = UDim2.new(0, 40, 0, 40)
    icon.Position = UDim2.new(0, 8, 0, 8)
    icon.BackgroundTransparency = 1
    icon.Font = Enum.Font.GothamBlack
    icon.TextSize = 20
    icon.TextColor3 = CONF.accentColor
    icon.Text = "🔔"

    local titleLbl = Instance.new("TextLabel", frame)
    titleLbl.Size = UDim2.new(1, -56, 0, 20)
    titleLbl.Position = UDim2.new(0, 56, 0, 6)
    titleLbl.BackgroundTransparency = 1
    titleLbl.Font = Enum.Font.GothamBold
    titleLbl.TextSize = 14
    titleLbl.TextColor3 = CONF.accentColor
    titleLbl.Text = title
    titleLbl.TextXAlignment = Enum.TextXAlignment.Left

    local msg = Instance.new("TextLabel", frame)
    msg.Size = UDim2.new(1, -56, 0, 44)
    msg.Position = UDim2.new(0, 56, 0, 26)
    msg.BackgroundTransparency = 1
    msg.Font = Enum.Font.Gotham
    msg.TextSize = 13
    msg.TextColor3 = Color3.fromRGB(220,220,220)
    msg.TextWrapped = true
    msg.Text = text
    msg.TextXAlignment = Enum.TextXAlignment.Left

    playNotif()
    tween(frame, 0.26, {Size = UDim2.new(1,0,0,92)})
    task.delay(dur, function()
        if frame and frame.Parent then
            tween(frame, 0.18, {Size = UDim2.new(1,0,0,0)})
            task.wait(0.22)
            if frame and frame.Parent then frame:Destroy() end
        end
    end)
end

-- ========= Loading Screen =========
local function spawnLoading(onFinish)
    local gui = Instance.new("ScreenGui", playerGui)
    gui.Name = "KH_Loading"
    gui.ResetOnSpawn = false
    gui.IgnoreGuiInset = true

    local bg = Instance.new("Frame", gui)
    bg.Size = UDim2.new(1,0,1,0)
    bg.Position = UDim2.new(0,0,0,0)
    bg.BackgroundColor3 = CONF.hubBg
    bg.BorderSizePixel = 0

    local vign = Instance.new("ImageLabel", bg)
    vign.Size = UDim2.new(1.6,0,1.6,0)
    vign.Position = UDim2.new(-0.3,0,-0.3,0)
    vign.BackgroundTransparency = 1
    vign.Image = "rbxassetid://5058094581"
    vign.ImageTransparency = 0.6

    local title = Instance.new("TextLabel", bg)
    title.Size = UDim2.new(0.9,0,0,72)
    title.Position = UDim2.new(0.05,0,0.16,0)
    title.BackgroundTransparency = 1
    title.Font = Enum.Font.GothamBlack
    title.TextSize = 28
    title.TextColor3 = Color3.fromRGB(255,255,255)
    title.Text = "Karker Hub Ultra — Final Boss"

    local center = Instance.new("TextLabel", bg)
    center.Size = UDim2.new(0.86,0,0,120)
    center.Position = UDim2.new(0.07,0,0.4,0)
    center.BackgroundTransparency = 1
    center.Font = Enum.Font.Gotham
    center.TextSize = 16
    center.TextColor3 = Color3.fromRGB(220,220,220)
    center.TextWrapped = true
    center.TextXAlignment = Enum.TextXAlignment.Center
    center.Text = ""

    local barBg = Instance.new("Frame", bg)
    barBg.Size = UDim2.new(0.56,0,0,14)
    barBg.Position = UDim2.new(0.22,0,0.72,0)
    barBg.BackgroundColor3 = Color3.fromRGB(18,18,20)
    newUICorner(barBg, 8)
    newStroke(barBg, Color3.fromRGB(40,40,44), 1)

    local barFill = Instance.new("Frame", barBg)
    barFill.Size = UDim2.new(0,0,1,0)
    barFill.BackgroundColor3 = CONF.accentColor
    newUICorner(barFill, 8)

    -- snow frames
    local snowFolder = Instance.new("Folder", bg)
    snowFolder.Name = "Snow"

    task.spawn(function()
        while bg.Parent do
            local fl = Instance.new("Frame", snowFolder)
            fl.Size = UDim2.new(0, math.random(3,7), 0, math.random(3,7))
            fl.Position = UDim2.new(math.random(), 0, -0.1, 0)
            fl.BackgroundColor3 = Color3.fromRGB(255,255,255)
            fl.BackgroundTransparency = 0.22
            fl.BorderSizePixel = 0
            local xoff = math.random(-160, 160)
            tween(fl, math.random(4,8), {Position = UDim2.new(fl.Position.X.Scale, xoff, 1.12, 0), BackgroundTransparency = 1})
            Debris:AddItem(fl, 6)
            task.wait(0.07)
        end
    end)

    local jokes = {
        "STRAWBERRY IS MINE;",
        "WSPSPPPP",
        "brainrot?",
        "pet-stealing protocol...",
        "Sammy was here"
    }
    local msg = jokes[math.random(1, #jokes)]

    pcall(function() STATE.sounds.click:Play() end)

    -- typewriter
    task.spawn(function()
        for i = 1, #msg do
            center.Text = msg:sub(1, i)
            task.wait(0.03)
        end
    end)

    -- progress
    task.spawn(function()
        local prog = 0
        local steps = {0.12, 0.28, 0.48, 0.72, 0.9, 1}
        for _, t in ipairs(steps) do
            while prog < t do
                prog = math.min(t, prog + (0.01 + math.random() * 0.03))
                tween(barFill, 0.12, {Size = UDim2.new(prog, 0, 1, 0)})
                task.wait(0.06)
            end
            task.wait(0.16 + math.random() * 0.5)
        end
        task.wait(0.7)
        tween(bg, 0.8, {BackgroundTransparency = 1})
        tween(title, 0.8, {TextTransparency = 1})
        tween(center, 0.8, {TextTransparency = 1})
        tween(barBg, 0.6, {BackgroundTransparency = 1})
        task.wait(0.9)
        if snowFolder and snowFolder.Parent then snowFolder:Destroy() end
        gui:Destroy()
        if type(onFinish) == "function" then pcall(onFinish) end
    end)
end

-- ========= Hub Build (red/black with animated rainbow border) =========
local function buildHub()
    if STATE.destroyed then return end

    -- create ScreenGui
    local gui = Instance.new("ScreenGui", playerGui)
    gui.Name = "KarkerHubUltra"
    gui.ResetOnSpawn = false
    STATE.gui = gui

    -- main window
    local window = Instance.new("Frame", gui)
    window.Name = "Window"
    window.Size = UDim2.new(0, 560, 0, 620)
    window.Position = UDim2.new(0.5, -280, 0.5, -310)
    window.AnchorPoint = Vector2.new(0.5, 0.5)
    window.BackgroundColor3 = CONF.hubBg
    window.BorderSizePixel = 0
    newUICorner(window, 20)

    -- rainbow animated border: we'll create a UIStroke and animate its Color
    local border = Instance.new("UIStroke", window)
    border.Thickness = 3
    border.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    border.Transparency = 0
    border.Color = Color3.fromHSV(0, 1, 1)

    -- animate rainbow via RenderStepped
    local hue = 0
    STATE.conns.rainbow = RunService.RenderStepped:Connect(function(dt)
        hue = (hue + dt * (1 / CONF.rainbowSpeed)) % 1
        border.Color = Color3.fromHSV(hue, 0.95, 1)
    end)

    -- subtle inner stroke (glow effect)
    newStroke(window, Color3.fromRGB(28,28,30), 1)

    -- soft snow behind hub (as frames)
    local bgSnow = Instance.new("Folder", window)
    bgSnow.Name = "BG_Snow"
    task.spawn(function()
        while window and window.Parent do
            local s = Instance.new("Frame", bgSnow)
            s.Size = UDim2.new(0, math.random(2,6), 0, math.random(2,6))
            s.Position = UDim2.new(math.random(), 0, -0.12, 0)
            s.BackgroundColor3 = Color3.fromRGB(255,255,255)
            s.BackgroundTransparency = 0.86
            s.BorderSizePixel = 0
            local x = math.random(-120,120)
            tween(s, math.random(6,10), {Position = UDim2.new(s.Position.X.Scale, x, 1.12, 0)})
            Debris:AddItem(s, 10)
            task.wait(0.14)
        end
    end)

    -- Header
    local header = Instance.new("Frame", window)
    header.Size = UDim2.new(1, 0, 0, 84)
    header.Position = UDim2.new(0, 0, 0, 0)
    header.BackgroundColor3 = Color3.fromRGB(18,18,20)
    newUICorner(header, 14)

    local title = Instance.new("TextLabel", header)
    title.Size = UDim2.new(0.7, 0, 1, 0)
    title.Position = UDim2.new(0.04, 0, 0, 0)
    title.BackgroundTransparency = 1
    title.Font = Enum.Font.GothamBlack
    title.TextSize = 22
    title.TextColor3 = Color3.fromRGB(250,250,250)
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.Text = "Karker Hub Ultra 🔥"

    local subtitle = Instance.new("TextLabel", header)
    subtitle.Size = UDim2.new(0.66, 0, 0, 18)
    subtitle.Position = UDim2.new(0.04, 0, 1, -24)
    subtitle.BackgroundTransparency = 1
    subtitle.Font = Enum.Font.Gotham
    subtitle.TextSize = 12
    subtitle.TextColor3 = Color3.fromRGB(200,200,200)
    subtitle.Text = "Created by YOUNG — best HUB ALIVE"

    -- rotating subtitles
    local rotating = {
        "certified stealer",
        "brainrot😎",
        "ur scripts are mid ",
        "not banned",
        "SHUR UP dont tell sammy "
    }
    task.spawn(function()
        while header and header.Parent do
            subtitle.Text = rotating[math.random(1,#rotating)]
            task.wait(3 + math.random() * 3)
        end
    end)

    -- title click easter egg (click 5 times quickly to rickroll)
    title.InputBegan:Connect(function(input)
        if input.UserInputType ~= Enum.UserInputType.MouseButton1 and input.UserInputType ~= Enum.UserInputType.Touch then return end
        local t = tick()
        if t - STATE.lastClickTime > 2 then
            STATE.clickCount = 0
        end
        STATE.clickCount = STATE.clickCount + 1
        STATE.lastClickTime = t
        pcall(function() STATE.sounds.hover:Play() end)
        if STATE.clickCount >= 5 then
            notify("Easter Egg", "Rickroll engaged. Enjoy! 😂", 4)
            pcall(function() STATE.sounds.rick:Play() end)
            STATE.clickCount = 0
        end
    end)

    -- header buttons (minimize / toggle / destroy)
    local btnMin = Instance.new("TextButton", header)
    btnMin.Size = UDim2.new(0, 36, 0, 32)
    btnMin.Position = UDim2.new(1, -192, 0.12, 0)
    btnMin.Text = "—" btnMin.Font = Enum.Font.GothamBold btnMin.TextSize = 18
    btnMin.BackgroundColor3 = Color3.fromRGB(28,28,30)
    newUICorner(btnMin, 8)

    local btnToggle = Instance.new("TextButton", header)
    btnToggle.Size = UDim2.new(0, 36, 0, 32)
    btnToggle.Position = UDim2.new(1, -132, 0.12, 0)
    btnToggle.Text = "⟳" btnToggle.Font = Enum.Font.GothamBold btnToggle.TextSize = 16
    btnToggle.BackgroundColor3 = Color3.fromRGB(28,28,30)
    newUICorner(btnToggle, 8)

    local btnDestroy = Instance.new("TextButton", header)
    btnDestroy.Size = UDim2.new(0, 36, 0, 32)
    btnDestroy.Position = UDim2.new(1, -72, 0.12, 0)
    btnDestroy.Text = "X" btnDestroy.Font = Enum.Font.GothamBold btnDestroy.TextSize = 16
    btnDestroy.BackgroundColor3 = Color3.fromRGB(140,36,36)
    newUICorner(btnDestroy, 8)

    -- Dragging (header-based) — mobile & PC robust implementation
    do
        local dragging, dragInput, dragStart, startPos = false, nil, nil, nil
        header.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                dragging = true
                dragStart = input.Position
                startPos = window.Position
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then dragging = false end
                end)
            end
        end)
        header.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                dragInput = input
            end
        end)
        UserInputService.InputChanged:Connect(function(input)
            if input == dragInput and dragging then
                local delta = input.Position - dragStart
                local newPos = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
                -- clamp to screen bounds (so it doesn't go fully off-screen)
                local screenX, screenY = workspace.CurrentCamera.ViewportSize.X, workspace.CurrentCamera.ViewportSize.Y
                local wSize = window.AbsoluteSize
                local left = math.clamp(newPos.X.Offset, -wSize.X*0.8, screenX - 60)
                local top = math.clamp(newPos.Y.Offset, -wSize.Y*0.8, screenY - 60)
                window.Position = UDim2.new(0, left, 0, top)
            end
        end)
    end

    -- content frame
    local content = Instance.new("Frame", window)
    content.Size = UDim2.new(1, -36, 1, -122)
    content.Position = UDim2.new(0, 18, 0, 92)
    content.BackgroundTransparency = 1

    local left = Instance.new("Frame", content)
    left.Size = UDim2.new(0, 320, 1, 0)
    left.Position = UDim2.new(0, 0, 0, 0)
    left.BackgroundTransparency = 1

    local right = Instance.new("Frame", content)
    right.Size = UDim2.new(1, -340, 1, 0)
    right.Position = UDim2.new(0, 340, 0, 0)
    right.BackgroundTransparency = 1

    -- left scroll for buttons
    local leftScroll = Instance.new("ScrollingFrame", left)
    leftScroll.Size = UDim2.new(1,0,1,0)
    leftScroll.CanvasSize = UDim2.new(0,0,0,1600)
    leftScroll.ScrollBarThickness = 8
    leftScroll.BackgroundTransparency = 1
    local leftLayout = Instance.new("UIListLayout", leftScroll)
    leftLayout.Padding = UDim.new(0,10)
    leftLayout.SortOrder = Enum.SortOrder.LayoutOrder

    -- right info box
    local infoTitle = Instance.new("TextLabel", right)
    infoTitle.Size = UDim2.new(1, -8, 0, 24)
    infoTitle.Position = UDim2.new(0, 4, 0, 0)
    infoTitle.BackgroundTransparency = 1
    infoTitle.Font = Enum.Font.GothamBold
    infoTitle.TextSize = 14
    infoTitle.TextColor3 = Color3.fromRGB(240,240,240)
    infoTitle.Text = "Status / Info"

    local infoBox = Instance.new("TextLabel", right)
    infoBox.Size = UDim2.new(1, -8, 1, -36)
    infoBox.Position = UDim2.new(0, 4, 0, 32)
    infoBox.BackgroundColor3 = Color3.fromRGB(8,8,10)
    newUICorner(infoBox, 10)
    newStroke(infoBox, Color3.fromRGB(20,20,22), 1)
    infoBox.Font = Enum.Font.Gotham
    infoBox.TextSize = 13
    infoBox.TextColor3 = Color3.fromRGB(200,200,200)
    infoBox.TextWrapped = true
    infoBox.Text = ("Welcome, %s — Created by YOUNG"):format(player.Name)

    -- Button factory (neon glow on hover)
    local function makeButton(lbl, emoji)
        local b = Instance.new("TextButton", leftScroll)
        b.Size = UDim2.new(1, -16, 0, 60)
        b.Position = UDim2.new(0, 8, 0, 0)
        b.BackgroundColor3 = Color3.fromRGB(12,12,14)
        newUICorner(b, 12)
        newStroke(b, Color3.fromRGB(24,24,26), 1)
        b.Font = Enum.Font.GothamSemibold
        b.Text = ((emoji and (emoji .. "  ") or "") .. lbl)
        b.TextSize = 16
        b.TextColor3 = Color3.fromRGB(230,230,230)
        b.AutoButtonColor = false

        b.MouseEnter:Connect(function()
            pcall(function() STATE.sounds.hover:Play() end)
            tween(b, 0.12, {BackgroundColor3 = Color3.fromRGB(28,6,6)})
            tween(b, 0.12, {Size = UDim2.new(1, -12, 0, 64)})
        end)
        b.MouseLeave:Connect(function()
            tween(b, 0.12, {BackgroundColor3 = Color3.fromRGB(12,12,14)})
            tween(b, 0.12, {Size = UDim2.new(1, -16, 0, 60)})
        end)
        b.MouseButton1Click:Connect(function()
            pcall(function() STATE.sounds.click:Play() end)
            tween(b, 0.08, {Size = UDim2.new(1, -18, 0, 56)})
            task.delay(0.12, function() if b then tween(b, 0.12, {Size = UDim2.new(1, -16, 0, 60)}) end end)
        end)
        return b
    end

    -- Float slider on right
    local floatLabel = Instance.new("TextLabel", right)
    floatLabel.Size = UDim2.new(1, -8, 0, 20)
    floatLabel.Position = UDim2.new(0, 4, 1, -160)
    floatLabel.BackgroundTransparency = 1
    floatLabel.Font = Enum.Font.GothamSemibold
    floatLabel.TextSize = 12
    floatLabel.TextColor3 = Color3.fromRGB(200,200,200)
    floatLabel.Text = "Float Strength"

    local track = Instance.new("Frame", right)
    track.Size = UDim2.new(0.9, 0, 0, 18)
    track.Position = UDim2.new(0, 8, 1, -132)
    track.BackgroundColor3 = Color3.fromRGB(22,22,24)
    newUICorner(track, 9)
    newStroke(track, Color3.fromRGB(26,26,28), 1)

    local knob = Instance.new("Frame", track)
    knob.Size = UDim2.new(STATE.float.strength or 0.55, 0, 1, 0)
    knob.BackgroundColor3 = CONF.accentColor
    newUICorner(knob, 9)

    local knobValue = Instance.new("TextLabel", right)
    knobValue.Size = UDim2.new(0.18,0,0,18)
    knobValue.Position = UDim2.new(0.82, 0, 1, -132)
    knobValue.BackgroundTransparency = 1
    knobValue.Font = Enum.Font.Gotham
    knobValue.TextSize = 12
    knobValue.TextColor3 = Color3.fromRGB(220,220,220)
    knobValue.Text = string.format("%.0f%%", (STATE.float.strength or 0.55) * 100)

    do
        local draggingKnob = false
        local function updateKnob(input)
            if not draggingKnob then return end
            local pos = input.Position
            local trackPos = track.AbsolutePosition
            local trackSize = track.AbsoluteSize
            local x = math.clamp(pos.X - trackPos.X, 0, trackSize.X)
            local t = x / trackSize.X
            knob.Size = UDim2.new(t, 0, 1, 0)
            STATE.float.strength = math.clamp(t, 0.05, 0.95)
            knobValue.Text = string.format("%.0f%%", STATE.float.strength * 100)
            if STATE.float.enabled and STATE.float.vf and STATE.float.att then
                local char = player.Character
                if char and char:FindFirstChild("HumanoidRootPart") then
                    local mass = char.HumanoidRootPart:GetMass()
                    STATE.float.vf.Force = Vector3.new(0, mass * workspace.Gravity * STATE.float.strength, 0)
                end
            end
        end

        knob.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                draggingKnob = true
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then draggingKnob = false end
                end)
            end
        end)
        UserInputService.InputChanged:Connect(function(input)
            if draggingKnob and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
                pcall(updateKnob, input)
            end
        end)
    end

    -- helper: create ring (aura) world part
    local function createRing(radius, color)
        local p = Instance.new("Part", workspace)
        p.Anchored = true
        p.CanCollide = false
        p.Size = Vector3.new(radius*2, 0.25, radius*2)
        p.Material = Enum.Material.Neon
        p.Color = color or CONF.accentColor
        p.Transparency = 0.32
        p.Shape = Enum.PartType.Cylinder
        p.Orientation = Vector3.new(90,0,0)
        p.Name = "KH_AuraRing"
        return p
    end

    -- ESP functions
    local function createESPForPlayer(plr)
        if not plr.Character then return end
        local head = plr.Character:FindFirstChild("Head")
        if not head then return end
        if head:FindFirstChild("KH_ESP_Billboard") then return end
        local b = Instance.new("BillboardGui", head)
        b.Name = "KH_ESP_Billboard"
        b.AlwaysOnTop = true
        b.Size = UDim2.new(0, 160, 0, 36)
        b.Adornee = head
        local txt = Instance.new("TextLabel", b)
        txt.Size = UDim2.new(1,0,1,0)
        txt.BackgroundTransparency = 1
        txt.Font = Enum.Font.GothamBold
        txt.TextSize = 14
        txt.TextColor3 = CONF.accentColor
        txt.Text = plr.Name

        if not plr.Character:FindFirstChild("KH_ESP_Box") then
            local box = Instance.new("Part", workspace)
            box.Name = "KH_ESP_Box"
            box.Transparency = 0.75
            box.Anchored = true
            box.CanCollide = false
            box.Size = Vector3.new(2,3,0.2)
            box.Material = Enum.Material.Neon
            box.Color = CONF.accentColor
            STATE.esp.boxParts[plr] = box
            table.insert(STATE.parts, box)
        end
    end

    local function removeESPForPlayer(plr)
        if plr.Character and plr.Character:FindFirstChild("Head") then
            local b = plr.Character.Head:FindFirstChild("KH_ESP_Billboard")
            if b then b:Destroy() end
        end
        if STATE.esp.boxParts[plr] then
            pcall(function() STATE.esp.boxParts[plr]:Destroy() end)
            STATE.esp.boxParts[plr] = nil
        end
    end

    local function updateESPPositions()
        for plr, box in pairs(STATE.esp.boxParts) do
            if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
                local hrp = plr.Character.HumanoidRootPart
                box.CFrame = CFrame.new(hrp.Position + Vector3.new(0, 1.6, 0))
                box.Size = Vector3.new(2.2, 3.6, 0.2)
            else
                pcall(function() box:Destroy() end)
                STATE.esp.boxParts[plr] = nil
            end
        end
    end

    local function toggleESP()
        STATE.esp.enabled = not STATE.esp.enabled
        if STATE.esp.enabled then
            notify("ESP", "Enabled (local visuals) 👀", 3)
            for _, pl in ipairs(Players:GetPlayers()) do
                if pl ~= player then createESPForPlayer(pl) end
            end
            if not STATE.conns.espConn then
                STATE.conns.espConn = RunService.RenderStepped:Connect(updateESPPositions)
            end
        else
            notify("ESP", "Disabled", 2)
            for _, pl in ipairs(Players:GetPlayers()) do removeESPForPlayer(pl) end
            if STATE.conns.espConn then pcall(function() STATE.conns.espConn:Disconnect() end) end
            STATE.conns.espConn = nil
        end
    end

    -- Special Sauce: aura + scanner (local visuals)
    local function toggleSpecialSauce()
        if STATE.special.active then
            STATE.special.active = false
            if STATE.special.scannerConn then pcall(function() STATE.special.scannerConn:Disconnect() end) end
            if STATE.special.auraPart and STATE.special.auraPart.Parent then STATE.special.auraPart:Destroy() end
            notify("Special Sauce", "Deactivated. Aura removed 👋", 2)
            infoBox.Text = "Special Sauce: stopped."
            return
        end

        local char = safeChar()
        local hrp = char:FindFirstChild("HumanoidRootPart")
        if not hrp then notify("Special Sauce", "Character not ready.", 2); return end

        notify("Special Sauce", "huh I see u tryna steal lol 😈", 3)
        task.wait(2)

        local ring = createRing(STATE.special.radius, CONF.accentColor)
        ring.Parent = workspace
        STATE.special.auraPart = ring
        table.insert(STATE.parts, ring)

        local flame = Instance.new("ParticleEmitter", hrp)
        flame.Texture = "rbxassetid://241594408"
        flame.Rate = 70
        flame.Lifetime = NumberRange.new(0.9, 1.6)
        flame.Size = NumberSequence.new(1.1)
        flame.Speed = NumberRange.new(0.2, 0.7)
        Debris:AddItem(flame, 12)

        STATE.special.active = true
        infoBox.Text = "Special Sauce: active. Radius: " .. tostring(STATE.special.radius) .. " studs."

        STATE.special.scannerConn = RunService.Heartbeat:Connect(function()
            if not STATE.special.active then return end
            if not (ring and ring.Parent and hrp and hrp.Parent) then return end
            ring.Position = hrp.Position - Vector3.new(0, 3, 0)
            for _, pl in ipairs(Players:GetPlayers()) do
                if pl ~= player and pl.Character and pl.Character:FindFirstChild("HumanoidRootPart") then
                    local otherHRP = pl.Character.HumanoidRootPart
                    local dist = (otherHRP.Position - hrp.Position).Magnitude
                    if dist <= STATE.special.radius then
                        -- visual bolt
                        local mag = dist
                        local bolt = Instance.new("Part", workspace)
                        bolt.Anchored = true
                        bolt.CanCollide = false
                        bolt.Size = Vector3.new(0.25, 0.25, mag)
                        bolt.CFrame = CFrame.new(hrp.Position, otherHRP.Position) * CFrame.new(0,0,-mag/2) * CFrame.Angles(math.pi/2,0,0)
                        bolt.Material = Enum.Material.Neon
                        bolt.Color = Color3.fromRGB(140, 220, 255)
                        Debris:AddItem(bolt, 0.26)

                        local spark = Instance.new("ParticleEmitter", otherHRP)
                        spark.Texture = "rbxassetid://256249139"
                        spark.Rate = 0
                        spark:Emit(30)
                        Debris:AddItem(spark, 0.6)

                        notify("TASER", pl.Name .. " triggered the aura (local) ⚡", 2)

                        local hum = pl.Character:FindFirstChildOfClass("Humanoid")
                        if hum then
                            local prevWS = hum.WalkSpeed
                            local prevJP = hum.JumpPower or 50
                            pcall(function() hum.WalkSpeed = 0 hum.JumpPower = 0 end)
                            task.delay(2.6, function()
                                pcall(function() hum.WalkSpeed = prevWS or 16 hum.JumpPower = prevJP end)
                            end)
                        end
                    end
                end
            end
        end)
    end

    -- Float toggle
    local function toggleFloat()
        if not STATE.float.enabled then
            local char = player.Character or player.CharacterAdded:Wait()
            local hrp = char:FindFirstChild("HumanoidRootPart")
            if not hrp then notify("Float", "Character root missing.", 2); return end
            if STATE.float.att then pcall(function() STATE.float.att:Destroy() end) end
            if STATE.float.vf then pcall(function() STATE.float.vf:Destroy() end) end
            local att = Instance.new("Attachment", hrp)
            att.Name = "KH_FloatAttach"
            local vf = Instance.new("VectorForce", hrp)
            vf.Attachment0 = att
            vf.RelativeTo = Enum.ActuatorRelativeTo.World
            local mass = hrp:GetMass()
            vf.Force = Vector3.new(0, mass * workspace.Gravity * STATE.float.strength, 0)
            STATE.float.att = att
            STATE.float.vf = vf
            STATE.float.enabled = true
            notify("Float", "Float enabled — glide mode 🕊️", 3)
            infoBox.Text = "Float enabled (strength " .. string.format("%.0f%%", STATE.float.strength*100) .. ")"
        else
            if STATE.float.vf then pcall(function() STATE.float.vf:Destroy() end) end
            if STATE.float.att then pcall(function() STATE.float.att:Destroy() end) end
            STATE.float.att = nil
            STATE.float.vf = nil
            STATE.float.enabled = false
            notify("Float", "Float disabled", 2)
            infoBox.Text = "Float disabled"
        end
    end

    -- Teleport anywhere by click
    local teleportConn
    local function startTeleportClick()
        notify("Teleport", "Tap/click anywhere to teleport there 🚀", 3)
        if teleportConn then pcall(function() teleportConn:Disconnect() end) end
        teleportConn = UserInputService.InputBegan:Connect(function(input, processed)
            if processed then return end
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                local m = player:GetMouse()
                if m and m.Hit and m.Target then
                    local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
                    if hrp then
                        hrp.CFrame = CFrame.new(m.Hit.Position + Vector3.new(0, 3, 0))
                        notify("Teleport", "Teleported to target ✨", 2)
                    end
                end
                if teleportConn then teleportConn:Disconnect(); teleportConn = nil end
            end
        end)
    end

    -- Server hop (basic)
    local function doServerHop()
        notify("Server Hop", "Attempting server hop... (may fail)", 3)
        pcall(function() TeleportService:Teleport(game.PlaceId, player) end)
    end

    -- Teleport to place / instance
    local function tpToPlace(pidText)
        local pid = tonumber(pidText)
        if not pid then notify("Teleport", "Invalid place id.", 3); return end
        notify("Teleport", "Teleporting to place " .. tostring(pid) .. " ...", 3)
        pcall(function() TeleportService:Teleport(pid, player) end)
    end
    local function tpToInstance(pidText, instText)
        local pid = tonumber(pidText)
        local inst = tostring(instText)
        if not pid or inst == "" then notify("Teleport", "Place ID and Instance ID required.", 3); return end
        notify("Teleport", "Teleporting to instance...", 3)
        pcall(function() TeleportService:TeleportToPlaceInstance(pid, inst, player) end)
    end

    -- Cleanup
    local function cleanupAll()
        STATE.destroyed = true
        for k,c in pairs(STATE.conns) do
            if c and type(c.Disconnect) == "function" then pcall(function() c:Disconnect() end) end
        end
        STATE.conns = {}
        if STATE.special.scannerConn then pcall(function() STATE.special.scannerConn:Disconnect() end) end
        if teleportConn then pcall(function() teleportConn:Disconnect() end) end
        if STATE.conns.espConn then pcall(function() STATE.conns.espConn:Disconnect() end) end
        for _, p in ipairs(STATE.parts) do pcall(function() if p and p.Parent then p:Destroy() end end) end
        STATE.parts = {}
        for plr, box in pairs(STATE.esp.boxParts or {}) do pcall(function() if box and box.Parent then box:Destroy() end end) end
        STATE.esp.boxParts = {}
        pcall(function() gui:Destroy() end)
        pcall(function() notifGui:Destroy() end)
        pcall(function() if STATE.sounds.bg and STATE.sounds.bg.IsPlaying then STATE.sounds.bg:Stop() end end)
        notify("Karker Hub", "THIS SHI ON TOP. ❤️", 2)
    end

    -- Player respawn: reapply float & refresh ESP
    Players.LocalPlayer.CharacterAdded:Connect(function(char)
        task.delay(0.5, function()
            if STATE.float.enabled then
                if STATE.float.att then pcall(function() STATE.float.att:Destroy() end) end
                if STATE.float.vf then pcall(function() STATE.float.vf:Destroy() end) end
                local hrp = char:FindFirstChild("HumanoidRootPart")
                if hrp then
                    local att = Instance.new("Attachment", hrp); STATE.float.att = att
                    local vf = Instance.new("VectorForce", hrp); vf.Attachment0 = att; vf.RelativeTo = Enum.ActuatorRelativeTo.World
                    local mass = hrp:GetMass(); vf.Force = Vector3.new(0, mass * workspace.Gravity * STATE.float.strength, 0); STATE.float.vf = vf
                end
            end
            if STATE.esp.enabled then createESPForPlayer(player) end
        end)
    end)

    -- Build Buttons & wire features
    local bSpecial = makeButton("Special Sauce (toggle)", "🛡️")
    bSpecial.MouseButton1Click:Connect(function() toggleSpecialSauce() end)

    local bFloat = makeButton("Toggle Float", "🕊️")
    bFloat.MouseButton1Click:Connect(function() toggleFloat() end)

    local bTaser = makeButton("Taser Aura (scan)", "⚡")
    do
        local active = false; local conn = nil
        bTaser.MouseButton1Click:Connect(function()
            active = not active
            if active then
                notify("Taser Aura", "Started scanning (local visuals) ⚡", 3)
                conn = RunService.Heartbeat:Connect(function()
                    local char = player.Character
                    if not (char and char:FindFirstChild("HumanoidRootPart")) then return end
                    local hrp = char.HumanoidRootPart
                    for _, pl in ipairs(Players:GetPlayers()) do
                        if pl ~= player and pl.Character and pl.Character:FindFirstChild("HumanoidRootPart") then
                            local otherHRP = pl.Character.HumanoidRootPart
                            local d = (otherHRP.Position - hrp.Position).Magnitude
                            if d <= 12 then
                                local bolt = Instance.new("Part", workspace)
                                bolt.Anchored = true; bolt.CanCollide = false; bolt.Material = Enum.Material.Neon
                                bolt.Color = Color3.fromRGB(255,210,100); bolt.Size = Vector3.new(0.2,0.2,d)
                                bolt.CFrame = CFrame.new(hrp.Position, otherHRP.Position) * CFrame.new(0,0,-d/2) * CFrame.Angles(math.pi/2,0,0)
                                Debris:AddItem(bolt, 0.26)
                                local spark = Instance.new("ParticleEmitter", otherHRP); spark.Texture = "rbxassetid://256249139"; spark.Rate = 0; spark:Emit(24); Debris:AddItem(spark, 0.5)
                                notify("TASER", pl.Name .. " zapped (local) 😵", 2)
                            end
                        end
                    end
                end)
                STATE.conns.taserConn = conn
            else
                if conn then pcall(function() conn:Disconnect() end) end
                notify("Taser Aura", "Stopped", 2)
                STATE.conns.taserConn = nil
            end
        end)
    end

    local bESP = makeButton("ESP Toggle", "📡")
    bESP.MouseButton1Click:Connect(function() toggleESP() end)

    local bTPClick = makeButton("Teleport Anywhere (click)", "📍")
    bTPClick.MouseButton1Click:Connect(function() startTeleportClick() end)

    local bServerHop = makeButton("Server Hop", "🔀")
    bServerHop.MouseButton1Click:Connect(function() doServerHop() end)

    -- Teleport input boxes on right
    local pidBox = Instance.new("TextBox", right)
    pidBox.Size = UDim2.new(1, -8, 0, 28)
    pidBox.Position = UDim2.new(0, 4, 1, -228)
    pidBox.PlaceholderText = "Place ID (number)"
    pidBox.Text = ""
    pidBox.Font = Enum.Font.Gotham
    pidBox.BackgroundColor3 = Color3.fromRGB(10,10,12)
    newUICorner(pidBox, 8)

    local instBox = Instance.new("TextBox", right)
    instBox.Size = UDim2.new(1, -8, 0, 28)
    instBox.Position = UDim2.new(0, 4, 1, -188)
    instBox.PlaceholderText = "Instance ID (JobId) (optional)"
    instBox.Text = ""
    instBox.Font = Enum.Font.Gotham
    instBox.BackgroundColor3 = Color3.fromRGB(10,10,12)
    newUICorner(instBox, 8)

    local bTPToPlace = makeButton("Teleport to Place", "🛰️")
    bTPToPlace.MouseButton1Click:Connect(function() tpToPlace(pidBox.Text) end)

    local bTPToInstance = makeButton("Teleport to Instance", "🔗")
    bTPToInstance.MouseButton1Click:Connect(function() tpToInstance(pidBox.Text, instBox.Text) end)

    local bPrivate = makeButton("Private Server (instructions)", "🔒")
    bPrivate.MouseButton1Click:Connect(function()
        notify("Private TP", "Paste your PlaceId and JobId into the right boxes and click Teleport to Instance. Can't auto-join private servers without a JobId.", 6)
    end)

    -- Minimize / Toggle / Destroy wiring
    local isMin = false
    btnMin.MouseButton1Click:Connect(function()
        isMin = not isMin
        if isMin then tween(window, 0.28, {Size = UDim2.new(0, 560, 0, 110)}) 
        else tween(window, 0.28, {Size = UDim2.new(0, 560, 0, 620)}) end
    end)
    btnToggle.MouseButton1Click:Connect(function()
        window.Visible = not window.Visible
    end)
    btnDestroy.MouseButton1Click:Connect(function()
        notify("Karker Hub", "Destroying hub and cleaning up...", 2)
        cleanupAll()
    end)

    -- Player added/removed events for ESP
    STATE.conns.playerAdded = Players.PlayerAdded:Connect(function(pl)
        if STATE.esp.enabled then createESPForPlayer(pl) end
    end)
    STATE.conns.playerRemoving = Players.PlayerRemoving:Connect(function(pl)
        removeESPForPlayer(pl)
    end)

    if not STATE.conns.espConn then
        STATE.conns.espConn = RunService.RenderStepped:Connect(function()
            if STATE.esp.enabled then updateESPPositions() end
        end)
    end

    -- keep reference
    STATE.conns.mainGui = gui
end

-- ========= Start =========
spawnLoading(function()
    if STATE.destroyed then return end
    buildHub()
    notify("Welcome", ("Welcome %s — Karker Hub Ultra loaded. Created by YOUNG 🎉"):format(player.Name), 4)
end)

-- End of script
