--=============================================================
-- ⚡ YHub Premium v15 — Full Premium Dashboard Edition
-- Script Created by: YOUNG
--=============================================================
-- Put this in StarterPlayerScripts (LocalScript)

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- ================== CONFIG ==================
local TASER_NAME = "Taser Gun"
local DEFAULT_RADIUS = 14
local HUB_W, HUB_H = 420, 300

-- runtime state
local autoTaseEnabled = false
local auraPart, fovCircle
local playersInRange = 0

-- ================== SOUNDS ==================
local function makeSound(parent, id, vol, name)
    local s = Instance.new("Sound", parent)
    s.Name = name or "YHubSound"
    s.SoundId = "rbxassetid://"..tostring(id)
    s.Volume = vol or 0.5
    s.Looped = false
    return s
end

local soundFolder = Instance.new("Folder", PlayerGui)
soundFolder.Name = "YHubSounds"
local sHover  = makeSound(soundFolder, 9118825481, 0.25, "Hover")
local sClick  = makeSound(soundFolder, 9118831569, 0.5,  "Click")
local sOpen   = makeSound(soundFolder, 12221967,    0.6,  "Open")
local sNotif  = makeSound(soundFolder, 9119136260, 0.6,  "Notif")

-- ================== UTILITIES ==================
local function equipTaser()
    local tool = ReplicatedStorage:FindFirstChild(TASER_NAME)
    if tool then
        local backpack = LocalPlayer:WaitForChild("Backpack")
        if not backpack:FindFirstChild(TASER_NAME) then
            tool:Clone().Parent = backpack
        end
    end
end

-- ===== Aura / FOV =====
local function createAura(radius)
    if auraPart then auraPart:Destroy() end
    local r = radius or DEFAULT_RADIUS
    local part = Instance.new("Part")
    part.Name = "YHubAura"
    part.Size = Vector3.new(r*2, r*2, r*2)
    part.Anchored = true
    part.CanCollide = false
    part.Material = Enum.Material.Neon
    part.Shape = Enum.PartType.Ball
    part.Transparency = 0.6
    part.Parent = workspace
    auraPart = part
    spawn(function()
        local t = 0
        while auraPart and auraPart.Parent do
            t = t + 0.008
            auraPart.Color = Color3.fromHSV(t%1, 0.95, 0.95)
            local char = LocalPlayer.Character
            if char and char:FindFirstChild("HumanoidRootPart") then
                auraPart.CFrame = char.HumanoidRootPart.CFrame
            end
            RunService.RenderStepped:Wait()
        end
    end)
end

local function createFOV(radius)
    if fovCircle then fovCircle:Destroy() end
    local r = radius or DEFAULT_RADIUS
    local part = Instance.new("Part")
    part.Name = "YHubFOV"
    part.Anchored = true
    part.CanCollide = false
    part.Size = Vector3.new(r*2, 0.2, r*2)
    part.Material = Enum.Material.Neon
    part.Transparency = 0.55
    part.Shape = Enum.PartType.Cylinder
    part.Parent = workspace
    fovCircle = part
    spawn(function()
        local t = 0
        while fovCircle and fovCircle.Parent do
            t = t + 0.008
            fovCircle.Color = Color3.fromHSV(t%1, 0.95, 0.95)
            local char = LocalPlayer.Character
            if char and char:FindFirstChild("HumanoidRootPart") then
                fovCircle.CFrame = CFrame.new(char.HumanoidRootPart.Position + Vector3.new(0,0.3,0)) * CFrame.Angles(math.rad(90),0,0)
            end
            RunService.RenderStepped:Wait()
        end
    end)
end

-- Auto-tase connection (single connect)
local autoTaseConn
local function startAutoTase(radius)
    if autoTaseConn then return end
    autoTaseConn = RunService.RenderStepped:Connect(function()
        if not autoTaseEnabled then return end
        local char = LocalPlayer.Character
        local hrp = char and char:FindFirstChild("HumanoidRootPart")
        if hrp then
            if not auraPart then createAura(radius) end
            if not fovCircle then createFOV(radius) end
            local taser = LocalPlayer.Backpack:FindFirstChild(TASER_NAME) or (char and char:FindFirstChild(TASER_NAME))
            if taser then
                local count = 0
                for _,pl in ipairs(Players:GetPlayers()) do
                    if pl ~= LocalPlayer and pl.Character and pl.Character:FindFirstChild("HumanoidRootPart") then
                        local otherHRP = pl.Character.HumanoidRootPart
                        local dist = (hrp.Position - otherHRP.Position).Magnitude
                        if dist <= (radius or DEFAULT_RADIUS) then
                            count = count + 1
                            pcall(function() taser:Activate() end)
                        end
                    end
                end
                playersInRange = count
            end
        end
    end)
end

local function stopAutoTase()
    if autoTaseConn then
        autoTaseConn:Disconnect()
        autoTaseConn = nil
    end
    if auraPart then auraPart:Destroy(); auraPart=nil end
    if fovCircle then fovCircle:Destroy(); fovCircle=nil end
    playersInRange = 0
end

-- ================== GUI BUILD ==================
local gui = Instance.new("ScreenGui")
gui.Name = "YHubPremiumGUI"
gui.ResetOnSpawn = false
gui.IgnoreGuiInset = true
gui.Parent = PlayerGui

-- ---------- Toast Notifications ----------
local notifFolder = Instance.new("Folder", gui); notifFolder.Name = "Notifs"
local function showToast(title, body, duration)
    duration = duration or 3.5
    local frame = Instance.new("Frame", notifFolder)
    frame.Size = UDim2.new(0,300,0,70)
    frame.Position = UDim2.new(1,-320,0.06,0)
    frame.AnchorPoint = Vector2.new(1,0)
    frame.BackgroundColor3 = Color3.fromRGB(22,22,30)
    frame.BackgroundTransparency = 0.05
    frame.BorderSizePixel = 0
    local corner = Instance.new("UICorner", frame); corner.CornerRadius = UDim.new(0,10)
    local stroke = Instance.new("UIStroke", frame); stroke.Color=Color3.fromRGB(80,180,255); stroke.Transparency=0.8

    local titleLbl = Instance.new("TextLabel", frame)
    titleLbl.Size = UDim2.new(1,-16,0,20); titleLbl.Position = UDim2.new(0,8,0,6)
    titleLbl.BackgroundTransparency = 1; titleLbl.Font = Enum.Font.GothamBold; titleLbl.TextSize = 15
    titleLbl.TextColor3 = Color3.fromRGB(240,240,255); titleLbl.Text = title

    local bodyLbl = Instance.new("TextLabel", frame)
    bodyLbl.Size = UDim2.new(1,-16,0,36); bodyLbl.Position = UDim2.new(0,8,0,28)
    bodyLbl.BackgroundTransparency = 1; bodyLbl.Font = Enum.Font.Gotham; bodyLbl.TextSize = 13
    bodyLbl.TextColor3 = Color3.fromRGB(190,190,210); bodyLbl.TextWrapped = true; bodyLbl.Text = body

    -- entrance
    TweenService:Create(frame, TweenInfo.new(0.36, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = UDim2.new(1,-16,0.06,0)}):Play()
    pcall(function() sNotif:Play() end)
    delay(duration, function()
        TweenService:Create(frame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {Position = UDim2.new(1,-320,0.06,0)}):Play()
        wait(0.33)
        frame:Destroy()
    end)
end

-- ---------- Floating Dock Orb (draggable) ----------
local dock = Instance.new("TextButton", gui)
dock.Name = "YHubDock"
dock.Size = UDim2.new(0,56,0,56)
-- try restore last saved pos (player attribute) else default bottom-left
local savedX = LocalPlayer:GetAttribute("YHubDockX")
local savedY = LocalPlayer:GetAttribute("YHubDockY")
if savedX and savedY then
    dock.Position = UDim2.new(0, savedX, 0, savedY)
else
    dock.Position = UDim2.new(0.04,0,0.8,0)
end
dock.AnchorPoint = Vector2.new(0.5,0.5)
dock.BackgroundColor3 = Color3.fromRGB(20,20,30)
dock.AutoButtonColor = false
dock.Text = "⚡"
dock.Font = Enum.Font.GothamBold
dock.TextSize = 26
dock.TextColor3 = Color3.fromRGB(230,230,255)
local dockCorner = Instance.new("UICorner", dock); dockCorner.CornerRadius = UDim.new(1,0)
local dockStroke = Instance.new("UIStroke", dock); dockStroke.Thickness = 2; dockStroke.Color = Color3.fromRGB(80,200,255)
-- pulse effect
spawn(function()
    local t=0
    while dock.Parent do
        t = t + 0.01
        dockStroke.Color = Color3.fromHSV((t*0.06)%1, 0.9, 0.95)
        RunService.RenderStepped:Wait()
    end
end)

-- drag logic (save to attribute on release)
local draggingDock = false
local dockDragStart, dockStartPos, dockInput
dock.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        draggingDock = true
        dockDragStart = input.Position
        dockStartPos = dock.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                draggingDock = false
                -- save absolute offset into attributes
                local absPos = dock.AbsolutePosition
                LocalPlayer:SetAttribute("YHubDockX", math.floor(absPos.X))
                LocalPlayer:SetAttribute("YHubDockY", math.floor(absPos.Y))
            end
        end)
    end
end)
dock.InputChanged:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then dockInput = input end end)
RunService.RenderStepped:Connect(function()
    if draggingDock and dockInput then
        local delta = dockInput.Position - dockDragStart
        local newPos = UDim2.new(dockStartPos.X.Scale, dockStartPos.X.Offset + delta.X, dockStartPos.Y.Scale, dockStartPos.Y.Offset + delta.Y)
        -- clamp inside screen
        local cam = workspace.CurrentCamera
        local vw, vh = (cam and cam.ViewportSize.X) or 1280, (cam and cam.ViewportSize.Y) or 720
        local nx = math.clamp(newPos.X.Offset, 8, vw-64)
        local ny = math.clamp(newPos.Y.Offset, 8, vh-64)
        dock.Position = UDim2.new(0, nx, 0, ny)
    end
end)

-- ---------- Main Hub (glass panel) ----------
local hub = Instance.new("Frame", gui)
hub.Name = "YHubMain"
hub.Size = UDim2.new(0, HUB_W, 0, HUB_H)
hub.Position = UDim2.new(-1, 0, 0.15, 0) -- off-screen left initially
hub.BackgroundColor3 = Color3.fromRGB(18,18,24)
hub.BackgroundTransparency = 0.08
hub.BorderSizePixel = 0
hub.Visible = false
local hubCorner = Instance.new("UICorner", hub); hubCorner.CornerRadius = UDim.new(0,14)
local hubStroke = Instance.new("UIStroke", hub); hubStroke.Thickness = 2; hubStroke.Color = Color3.fromRGB(80,200,255); hubStroke.Transparency = 0.6

-- Left Sidebar (tabs)
local sidebar = Instance.new("Frame", hub)
sidebar.Size = UDim2.new(0, 120, 1, 0)
sidebar.Position = UDim2.new(0,0,0,0)
sidebar.BackgroundTransparency = 1

local sideLayout = Instance.new("UIListLayout", sidebar)
sideLayout.Padding = UDim.new(0,8)
sideLayout.FillDirection = Enum.FillDirection.Vertical
sideLayout.VerticalAlignment = Enum.VerticalAlignment.Top
sideLayout.SortOrder = Enum.SortOrder.LayoutOrder

local titleLabel = Instance.new("TextLabel", sidebar)
titleLabel.Size = UDim2.new(1, -12, 0, 44)
titleLabel.Position = UDim2.new(0,6,0,8)
titleLabel.BackgroundTransparency = 1
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextSize = 18
titleLabel.Text = "YHub"
titleLabel.TextColor3 = Color3.fromRGB(230,230,255)
titleLabel.TextXAlignment = Enum.TextXAlignment.Left

-- tab creation helper
local tabs = {}
local function makeTab(name, order)
    local btn = Instance.new("TextButton", sidebar)
    btn.Size = UDim2.new(1, -16, 0, 36)
    btn.Position = UDim2.new(0,8,0, 60 + (order-1)*44)
    btn.BackgroundColor3 = Color3.fromRGB(28,28,38)
    btn.Text = name
    btn.Font = Enum.Font.GothamBold
    btn.TextSize = 14
    btn.TextColor3 = Color3.fromRGB(220,220,235)
    btn.AutoButtonColor = false
    btn.Name = "Tab_"..name
    local corner = Instance.new("UICorner", btn); corner.CornerRadius = UDim.new(0,8)
    local stroke = Instance.new("UIStroke", btn); stroke.Color = Color3.fromRGB(80,160,255); stroke.Transparency = 0.9; stroke.Thickness = 1
    return btn
end

local tabHome   = makeTab("Home", 1)
local tabAuto   = makeTab("Auto-Tase", 2)
local tabSet    = makeTab("Settings", 3)
local tabCred   = makeTab("Credits", 4)

-- Main content area
local content = Instance.new("Frame", hub)
content.Size = UDim2.new(1, -120, 1, -24)
content.Position = UDim2.new(0,120,0,12)
content.BackgroundTransparency = 1

-- content pages
local pages = {}

local function newPage(name)
    local p = Instance.new("Frame", content)
    p.Size = UDim2.new(1,0,1,0)
    p.BackgroundTransparency = 1
    p.Visible = false
    pages[name] = p
    return p
end

-- 1) Home
local home = newPage("Home")
local homeTitle = Instance.new("TextLabel", home)
homeTitle.Size = UDim2.new(1, -24, 0, 28)
homeTitle.Position = UDim2.new(0,12,0,0)
homeTitle.BackgroundTransparency = 1
homeTitle.Font = Enum.Font.GothamBold; homeTitle.TextSize = 18; homeTitle.Text = "Welcome — YHub Premium"
homeTitle.TextColor3 = Color3.fromRGB(240,240,255); homeTitle.TextXAlignment = Enum.TextXAlignment.Left

local homeBody = Instance.new("TextLabel", home)
homeBody.Size = UDim2.new(1, -24, 0, 90)
homeBody.Position = UDim2.new(0,12,0,34)
homeBody.BackgroundTransparency = 1
homeBody.Font = Enum.Font.Gotham; homeBody.TextSize = 14
homeBody.TextColor3 = Color3.fromRGB(200,200,220)
homeBody.TextWrapped = true
homeBody.Text = "Ultra dashboard interface. Use the 'Auto-Tase' tab to enable automated taser firing around you. Customize visual effects and radius in Settings. Credits show the author."

local liveStat = Instance.new("TextLabel", home)
liveStat.Size = UDim2.new(1, -24, 0, 22)
liveStat.Position = UDim2.new(0,12,0,130)
liveStat.BackgroundTransparency = 1
liveStat.Font = Enum.Font.GothamSemibold; liveStat.TextSize = 14
liveStat.TextColor3 = Color3.fromRGB(180,255,255)
liveStat.Text = "Players in range: 0"

-- 2) Auto-Tase page
local autoPage = newPage("Auto-Tase")
local autoTitle = Instance.new("TextLabel", autoPage)
autoTitle.Size = UDim2.new(1,-24,0,28)
autoTitle.Position = UDim2.new(0,12,0,0)
autoTitle.BackgroundTransparency = 1
autoTitle.Font = Enum.Font.GothamBold; autoTitle.TextSize = 18; autoTitle.Text = "Auto-Tase Controls"
autoTitle.TextColor3 = Color3.fromRGB(240,240,255)

-- toggle switch component
local function makeSwitch(parent, labelTxt, initial)
    local container = Instance.new("Frame", parent)
    container.Size = UDim2.new(1,-24,0,44)
    container.Position = UDim2.new(0,12,0,40 + (#parent:GetChildren()*0))
    container.BackgroundTransparency = 1

    local lbl = Instance.new("TextLabel", container)
    lbl.Size = UDim2.new(0.6,0,1,0)
    lbl.BackgroundTransparency = 1
    lbl.Font = Enum.Font.Gotham; lbl.TextSize = 14; lbl.Text = labelTxt
    lbl.TextColor3 = Color3.fromRGB(220,220,235)
    lbl.TextXAlignment = Enum.TextXAlignment.Left

    local swBg = Instance.new("Frame", container)
    swBg.Size = UDim2.new(0,58,0,32)
    swBg.AnchorPoint = Vector2.new(1,0.5)
    swBg.Position = UDim2.new(1,-8,0.5,0)
    swBg.BackgroundColor3 = Color3.fromRGB(46,46,56)
    local swCorner = Instance.new("UICorner", swBg); swCorner.CornerRadius = UDim.new(0,16)
    local swFill = Instance.new("Frame", swBg)
    swFill.Size = initial and UDim2.new(0,30,1,0) or UDim2.new(0,6,1,0)
    swFill.Position = initial and UDim2.new(1,-30,0,0) or UDim2.new(0,0,0,0)
    swFill.BackgroundColor3 = initial and Color3.fromRGB(80,200,255) or Color3.fromRGB(160,160,170)
    local swCorner2 = Instance.new("UICorner", swFill); swCorner2.CornerRadius = UDim.new(0,14)

    return {Container = container, Switch = swBg, Fill = swFill, Set = function(state)
        if state then
            TweenService:Create(swFill, TweenInfo.new(0.22, Enum.EasingStyle.Quad), {Size = UDim2.new(0,30,1,0), Position = UDim2.new(1,-30,0,0), BackgroundColor3 = Color3.fromRGB(80,200,255)}):Play()
        else
            TweenService:Create(swFill, TweenInfo.new(0.22, Enum.EasingStyle.Quad), {Size = UDim2.new(0,6,1,0), Position = UDim2.new(0,0,0,0), BackgroundColor3 = Color3.fromRGB(160,160,170)}):Play()
        end
    end}
end

local autoSwitch = makeSwitch(autoPage, "Auto-Tase Enabled", false)
autoSwitch.Switch.MouseButton1Click:Connect(function()
    autoTaseEnabled = not autoTaseEnabled
    autoSwitch.Set(autoTaseEnabled)
    if autoTaseEnabled then
        startAutoTase(LocalPlayer:GetAttribute("YHubRadius") or DEFAULT_RADIUS)
        showToast("Auto-Tase", "Auto-Tase is ON", 3)
    else
        stopAutoTase()
        showToast("Auto-Tase", "Auto-Tase is OFF", 3)
    end
    pcall(function() sClick:Play() end)
end)

local equipBtn = Instance.new("TextButton", autoPage)
equipBtn.Size = UDim2.new(0.48,0,0,36)
equipBtn.Position = UDim2.new(0,12,0,110)
equipBtn.BackgroundColor3 = Color3.fromRGB(42,42,56)
equipBtn.Font = Enum.Font.GothamBold; equipBtn.TextSize = 14; equipBtn.Text = "Equip Taser"
equipBtn.TextColor3 = Color3.fromRGB(235,235,245)
local equipCorner = Instance.new("UICorner", equipBtn); equipCorner.CornerRadius = UDim.new(0,8)
equipBtn.MouseButton1Click:Connect(function()
    equipTaser()
    showToast("Taser", "Taser equipped to backpack", 2.2)
    pcall(function() sClick:Play() end)
end)

-- 3) Settings
local setPage = newPage("Settings")
local setTitle = Instance.new("TextLabel", setPage)
setTitle.Size = UDim2.new(1,-24,0,28); setTitle.Position = UDim2.new(0,12,0,0)
setTitle.BackgroundTransparency = 1; setTitle.Font = Enum.Font.GothamBold; setTitle.TextSize = 18
setTitle.TextColor3 = Color3.fromRGB(240,240,255); setTitle.Text = "Settings"

-- radius slider (simple)
local radiusLabel = Instance.new("TextLabel", setPage)
radiusLabel.Size = UDim2.new(1,-24,0,18)
radiusLabel.Position = UDim2.new(0,12,0,44)
radiusLabel.BackgroundTransparency = 1
radiusLabel.Font = Enum.Font.Gotham; radiusLabel.TextSize = 13
radiusLabel.TextColor3 = Color3.fromRGB(200,200,220)
radiusLabel.Text = "Aura / Auto-Tase Radius: "..tostring(DEFAULT_RADIUS)

local sliderBG = Instance.new("Frame", setPage)
sliderBG.Size = UDim2.new(1,-48,0,18)
sliderBG.Position = UDim2.new(0,24,0,68)
sliderBG.BackgroundColor3 = Color3.fromRGB(40,40,52)
local sliderCorner = Instance.new("UICorner", sliderBG); sliderCorner.CornerRadius = UDim.new(0,8)
local sliderFill = Instance.new("Frame", sliderBG)
sliderFill.Size = UDim2.new(0.25,0,1,0)
sliderFill.BackgroundColor3 = Color3.fromRGB(80,200,255)
local fillCorner = Instance.new("UICorner", sliderFill); fillCorner.CornerRadius = UDim.new(0,8)
local handle = Instance.new("TextButton", sliderBG)
handle.Size = UDim2.new(0,16,0,16)
handle.Position = UDim2.new(0.25, -8, 0.5, -8)
handle.BackgroundColor3 = Color3.fromRGB(230,230,255)
handle.AutoButtonColor = false
handle.Text = ""
local draggingHandle = false
local function setRadiusFromPercent(p)
    p = math.clamp(p, 0, 1)
    sliderFill.Size = UDim2.new(p,0,1,0)
    handle.Position = UDim2.new(p, -8, 0.5, -8)
    local r = math.floor(6 + p * 54) -- range 6..60
    radiusLabel.Text = "Aura / Auto-Tase Radius: "..tostring(r)
    LocalPlayer:SetAttribute("YHubRadius", r)
    -- update live aura if active
    if auraPart then
        auraPart.Size = Vector3.new(r*2, r*2, r*2)
    end
    if fovCircle then
        fovCircle.Size = Vector3.new(r*2, 0.2, r*2)
    end
end

handle.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType==Enum.UserInputType.Touch then
        draggingHandle = true
        input.Changed:Connect(function() if input.UserInputState == Enum.UserInputState.End then draggingHandle = false end end)
    end
end)
RunService.RenderStepped:Connect(function()
    if draggingHandle then
        local abs = UserInputService:GetMouseLocation()
        local relativeX = math.clamp(abs.X - sliderBG.AbsolutePosition.X, 0, sliderBG.AbsoluteSize.X)
        local p = relativeX / sliderBG.AbsoluteSize.X
        setRadiusFromPercent(p)
    end
end)

-- init slider to saved or default
local savedR = LocalPlayer:GetAttribute("YHubRadius")
if savedR then
    local p = (savedR - 6) / 54
    setRadiusFromPercent(p)
else
    setRadiusFromPercent((DEFAULT_RADIUS - 6) / 54)
end

-- 4) Credits
local credPage = newPage("Credits")
local credTitle = Instance.new("TextLabel", credPage)
credTitle.Size = UDim2.new(1,-24,0,28); credTitle.Position = UDim2.new(0,12,0,0)
credTitle.BackgroundTransparency = 1; credTitle.Font = Enum.Font.GothamBold; credTitle.TextSize = 18
credTitle.TextColor3 = Color3.fromRGB(240,240,255); credTitle.Text = "Credits"

local credBody = Instance.new("TextLabel", credPage)
credBody.Size = UDim2.new(1,-24,0,120); credBody.Position = UDim2.new(0,12,0,34)
credBody.BackgroundTransparency = 1; credBody.Font = Enum.Font.GothamItalic; credBody.TextSize = 14
credBody.TextColor3 = Color3.fromRGB(200,200,220)
credBody.Text = "Made with ⚡ by YOUNG\n\nThanks for using YHub Premium — customize it in Settings. Contact YOUNG for premium themes and skins."

-- ---------- Tab logic ----------
local currentTab = "Home"
local function switchTo(tabName)
    for k,v in pairs(pages) do v.Visible = false end
    if pages[tabName] then pages[tabName].Visible = true end
    -- highlight selected button
    for _,b in pairs({tabHome, tabAuto, tabSet, tabCred}) do
        b.BackgroundColor3 = Color3.fromRGB(28,28,38)
    end
    if tabName == "Home" then tabHome.BackgroundColor3 = Color3.fromRGB(36,36,46) end
    if tabName == "Auto-Tase" then tabAuto.BackgroundColor3 = Color3.fromRGB(36,36,46) end
    if tabName == "Settings" then tabSet.BackgroundColor3 = Color3.fromRGB(36,36,46) end
    if tabName == "Credits" then tabCred.BackgroundColor3 = Color3.fromRGB(36,36,46) end
    currentTab = tabName
end

tabHome.MouseButton1Click:Connect(function() pcall(function() sClick:Play() end) switchTo("Home") end)
tabAuto.MouseButton1Click:Connect(function() pcall(function() sClick:Play() end) switchTo("Auto-Tase") end)
tabSet.MouseButton1Click:Connect(function() pcall(function() sClick:Play() end) switchTo("Settings") end)
tabCred.MouseButton1Click:Connect(function() pcall(function() sClick:Play() end) switchTo("Credits") end)

-- ---------- Open / Close from Dock ----------
local hubVisible = false
local function openHub()
    if hubVisible then return end
    hubVisible = true
    hub.Visible = true
    TweenService:Create(hub, TweenInfo.new(0.36, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {Position = UDim2.new(0.04,0,0.15,0)}):Play()
    pcall(function() sOpen:Play() end)
    showToast("YHub Premium", "Welcome — Script by YOUNG", 3)
end
local function closeHub()
    if not hubVisible then return end
    hubVisible = false
    TweenService:Create(hub, TweenInfo.new(0.24, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {Position = UDim2.new(-1,0,0.15,0)}):Play()
    delay(0.26, function() if not hubVisible then hub.Visible = false end end)
end

dock.MouseButton1Click:Connect(function()
    if hubVisible then
        closeHub()
    else
        openHub()
    end
end)

-- close hub when pressing ESC
UserInputService.InputBegan:Connect(function(input, gp)
    if gp then return end
    if input.KeyCode == Enum.KeyCode.Escape then
        if hubVisible then closeHub() end
    end
end)

-- ---------- Live updates ----------
spawn(function()
    while true do
        -- update live stats label
        liveStat.Text = "Players in range: "..tostring(playersInRange)
        -- update every 0.25s
        wait(0.25)
    end
end)

-- initialize
equipTaser()
startAutoTase(LocalPlayer:GetAttribute("YHubRadius") or DEFAULT_RADIUS)
showToast("Loaded", "YHub Premium loaded — by YOUNG", 3)

-- clean up on script end (safety)
game:BindToClose(function()
    stopAutoTase()
end)
