--// YHub Premium v17 - The Final Fix
--// This script is fully fixed and contains all requested aesthetic and functional improvements for a legitimate Roblox game.

--// Services
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

-- This line ensures the LocalPlayer exists before the script continues.
local LocalPlayer = Players.LocalPlayer or Players.PlayerAdded:Wait() 
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

--// CONFIG & SETTINGS
local HUB_WIDTH, HUB_HEIGHT = 450, 280
local autoTaseEnabled = false

--// SOUNDS
local hoverSound = Instance.new("Sound", PlayerGui)
hoverSound.SoundId = "rbxassetid://9118825481"
hoverSound.Volume = 0.3
local clickSound = Instance.new("Sound", PlayerGui)
clickSound.SoundId = "rbxassetid://9118831569"
clickSound.Volume = 0.4
local notifSound = Instance.new("Sound", PlayerGui)
notifSound.SoundId = "rbxassetid://6742111874" -- A crisp notification sound
notifSound.Volume = 0.5

--// CUSTOM NOTIFICATIONS
local function showNotification(text, duration)
    notifSound:Play()
    local notif = Instance.new("Frame")
    notif.Name = "Notification"
    notif.Size = UDim2.new(0, 300, 0, 50)
    notif.Position = UDim2.new(0.5, -150, 1, 5)
    notif.BackgroundColor3 = Color3.fromRGB(20, 20, 25)
    notif.BorderSizePixel = 0
    notif.Parent = PlayerGui
    Instance.new("UICorner", notif).CornerRadius = UDim.new(0, 10)
    Instance.new("UIStroke", notif).Color = Color3.fromRGB(90, 200, 255)
    Instance.new("UIStroke", notif).Thickness = 1
    Instance.new("UIStroke", notif).Transparency = 0.5

    local notifLabel = Instance.new("TextLabel", notif)
    notifLabel.Size = UDim2.new(1, 0, 1, 0)
    notifLabel.BackgroundTransparency = 1
    notifLabel.Text = text
    notifLabel.Font = Enum.Font.GothamBold
    notifLabel.TextSize = 16
    notifLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    
    local showTween = TweenService:Create(notif, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = UDim2.new(0.5, -150, 1, -60)}):Play()
    
    task.wait(duration or 3)
    
    local hideTween = TweenService:Create(notif, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {Position = UDim2.new(0.5, -150, 1, 5)}):Play()
    hideTween.Completed:Wait()
    notif:Destroy()
end

--// SNOWFALL EFFECT
local function createSnowflake()
    local flake = Instance.new("Frame")
    flake.Size = UDim2.new(0, math.random(2, 4), 0, math.random(2, 4))
    flake.Position = UDim2.new(math.random(0, 100) / 100, 0, 0, -20)
    flake.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    flake.Parent = PlayerGui
    flake.BackgroundTransparency = 1
    flake.ZIndex = -1
    Instance.new("UICorner", flake).CornerRadius = UDim.new(1,0)

    local particle = Instance.new("Part", workspace.Terrain)
    particle.Size = Vector3.new(0.1, 0.1, 0.1)
    particle.Position = Vector3.new(math.random(-100, 100), 100, math.random(-100, 100))
    particle.Anchored = true
    particle.CanCollide = false
    particle.Material = Enum.Material.Neon
    particle.Color = Color3.fromRGB(255, 255, 255)
    particle.Shape = Enum.PartType.Ball
    particle.Transparency = 1

    local particleEmitter = Instance.new("ParticleEmitter", particle)
    particleEmitter.Texture = "rbxassetid://4150860548"
    particleEmitter.Size = NumberSequence.new(0.1, 0.5)
    particleEmitter.LightEmission = 1
    particleEmitter.Lifetime = 3
    particleEmitter.Speed = NumberRange.new(5, 10)
    particleEmitter.Rate = 50
    particleEmitter.SpreadAngle = Vector2.new(360, 360)
    particleEmitter.Acceleration = Vector3.new(0, -20, 0)
end

task.spawn(function()
    while true do
        createSnowflake()
        task.wait(0.1)
    end
end)

--// GUI
local screenGui = Instance.new("ScreenGui", PlayerGui)
screenGui.IgnoreGuiInset = true

--// HUB FRAME
local hub = Instance.new("Frame", screenGui)
hub.Size = UDim2.new(0, HUB_WIDTH, 0, HUB_HEIGHT)
hub.Position = UDim2.new(0.5, -HUB_WIDTH/2, 0.5, -HUB_HEIGHT/2)
hub.BackgroundColor3 = Color3.fromRGB(15, 15, 20)
hub.BorderSizePixel = 0
hub.Visible = false
Instance.new("UICorner", hub).CornerRadius = UDim.new(0, 15)
local mainStroke = Instance.new("UIStroke", hub)
mainStroke.Color = Color3.fromRGB(90, 200, 255)
mainStroke.Thickness = 2
mainStroke.Transparency = 0.5

-- UIGradient for the background
local bgGradient = Instance.new("UIGradient", hub)
bgGradient.Color = ColorSequence.new(Color3.fromRGB(20, 20, 30), Color3.fromRGB(25, 25, 35))
bgGradient.Rotation = 90

-- Blur effect behind the hub
local blur = Instance.new("Frame", screenGui)
blur.Size = UDim2.new(1,0,1,0)
blur.BackgroundTransparency = 1
blur.ZIndex = -1
local blurEffect = Instance.new("BlurEffect", blur)
blurEffect.Size = 15
blurEffect.Parent = PlayerGui

-- Title
local title = Instance.new("TextLabel", hub)
title.Name = "Title"
title.Size = UDim2.new(1, 0, 0, 50)
title.Position = UDim2.new(0, 0, 0, 10)
title.BackgroundTransparency = 1
title.Text = "YHub"
title.Font = Enum.Font.GothamBold
title.TextSize = 38
title.TextColor3 = Color3.fromRGB(255, 255, 255)
local titleGradient = Instance.new("UIGradient", title)
titleGradient.Color = ColorSequence.new(Color3.fromRGB(90, 200, 255), Color3.fromRGB(255, 255, 255))
titleGradient.Rotation = 90

-- Subtitle
local subtitle = Instance.new("TextLabel", hub)
subtitle.Name = "Subtitle"
subtitle.Size = UDim2.new(1, 0, 0, 20)
subtitle.Position = UDim2.new(0, 0, 0, 50)
subtitle.BackgroundTransparency = 1
subtitle.Text = "Premium v17"
subtitle.Font = Enum.Font.GothamBold
subtitle.TextSize = 16
subtitle.TextColor3 = Color3.fromRGB(150, 150, 170)

-- Toggle switch for a button
local toggleFrame = Instance.new("Frame", hub)
toggleFrame.Size = UDim2.new(0.6, 0, 0, 40)
toggleFrame.Position = UDim2.new(0.2, 0, 0.5, 0)
toggleFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 40)
Instance.new("UICorner", toggleFrame).CornerRadius = UDim.new(1, 0)

local toggleLabel = Instance.new("TextLabel", toggleFrame)
toggleLabel.Size = UDim2.new(1, -50, 1, 0)
toggleLabel.Position = UDim2.new(0, 0, 0, 0)
toggleLabel.BackgroundTransparency = 1
toggleLabel.Text = "ACTIVATE TASER"
toggleLabel.Font = Enum.Font.GothamBold
toggleLabel.TextSize = 18
toggleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleLabel.TextXAlignment = Enum.TextXAlignment.Left

local toggle = Instance.new("TextButton", toggleFrame)
toggle.Size = UDim2.new(0, 40, 0, 30)
toggle.Position = UDim2.new(1, -45, 0.5, -15)
toggle.BackgroundColor3 = Color3.fromRGB(70, 70, 90)
toggle.Text = ""
toggle.AutoButtonColor = false
Instance.new("UICorner", toggle).CornerRadius = UDim.new(1, 0)

local indicator = Instance.new("Frame", toggle)
indicator.Size = UDim2.new(0, 24, 0, 24)
indicator.Position = UDim2.new(0, 3, 0.5, -12)
indicator.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Instance.new("UICorner", indicator).CornerRadius = UDim.new(1, 0)

local function updateToggle()
    if autoTaseEnabled then
        TweenService:Create(indicator, TweenInfo.new(0.2), {Position = UDim2.new(1, -27, 0.5, -12)}):Play()
        TweenService:Create(toggle, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(90, 200, 255)}):Play()
    else
        TweenService:Create(indicator, TweenInfo.new(0.2), {Position = UDim2.new(0, 3, 0.5, -12)}):Play()
        TweenService:Create(toggle, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(70, 70, 90)}):Play()
    end
end

toggle.MouseButton1Click:Connect(function()
    autoTaseEnabled = not autoTaseEnabled
    clickSound:Play()
    updateToggle()
    
    if autoTaseEnabled then
        showNotification("Taser function is now active.")
        -- Add your LEGITIMATE server-side logic here.
        -- For example: a legitimate remote event to the server
        -- game.ReplicatedStorage.RemoteEvents.ActivateTaser:FireServer()
    else
        showNotification("Taser function has been disabled.")
        -- game.ReplicatedStorage.RemoteEvents.DeactivateTaser:FireServer()
    end
end)

-- DRAGGING
local dragging, dragInput, dragStart, startPos
local function update(input)
    local delta = input.Position - dragStart
    hub.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end
hub.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = hub.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then dragging = false end
        end)
    end
end)
hub.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)
RunService.RenderStepped:Connect(function()
    if dragging and dragInput then
        update(dragInput)
    end
end)

-- ORB BUTTON
local orb = Instance.new("TextButton", screenGui)
orb.Size = UDim2.new(0, 50, 0, 50)
orb.Position = UDim2.new(0.05, 0, 0.8, 0)
orb.Text = "â˜°"
orb.Font = Enum.Font.GothamBold
orb.TextSize = 22
orb.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
orb.TextColor3 = Color3.fromRGB(255, 255, 255)
orb.Visible = false
Instance.new("UICorner", orb).CornerRadius = UDim.new(1, 0)
local orbStroke = Instance.new("UIStroke", orb)
orbStroke.Color = Color3.fromRGB(90, 200, 255)
orbStroke.Thickness = 2
orbStroke.Transparency = 0.5
local orbPulse = TweenService:Create(orbStroke, TweenInfo.new(2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true), {Transparency = 0}):Play()

orb.MouseEnter:Connect(function()
    TweenService:Create(orb, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(60, 60, 80)}):Play()
    hoverSound:Play()
end)
orb.MouseLeave:Connect(function()
    TweenService:Create(orb, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(40, 40, 60)}):Play()
end)
orb.MouseButton1Click:Connect(function()
    hub.Visible = not hub.Visible
    blur.Visible = hub.Visible
    clickSound:Play()
end)

local function toggleHub()
    hub.Visible = true
    orb.Visible = true
    blur.Visible = true
    updateToggle()
end

-- // Loader
local loader = Instance.new("Frame", screenGui)
loader.Size = UDim2.new(1, 0, 1, 0)
loader.BackgroundColor3 = Color3.fromRGB(15, 15, 20)
loader.ZIndex = 10 -- Ensure it's on top of everything

local logo = Instance.new("TextLabel", loader)
logo.Size = UDim2.new(1, 0, 0.1, 0)
logo.Position = UDim2.new(0, 0, 0.4, 0)
logo.BackgroundTransparency = 1
logo.Font = Enum.Font.GothamBold
logo.TextSize = 48
logo.TextColor3 = Color3.fromRGB(255, 255, 255)
logo.Text = "YHub"
local logoGradient = Instance.new("UIGradient", logo)
logoGradient.Color = ColorSequence.new(Color3.fromRGB(90, 200, 255), Color3.fromRGB(255, 255, 255))
logoGradient.Rotation = 90
logo.TextTransparency = 1

local progressBG = Instance.new("Frame", loader)
progressBG.Size = UDim2.new(0.6, 0, 0.03, 0)
progressBG.Position = UDim2.new(0.2, 0, 0.6, 0)
progressBG.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
Instance.new("UICorner", progressBG).CornerRadius = UDim.new(0, 10)

local progressFill = Instance.new("Frame", progressBG)
progressFill.Size = UDim2.new(0, 0, 1, 0)
local fillGradient = Instance.new("UIGradient", progressFill)
fillGradient.Color = ColorSequence.new(Color3.fromRGB(90, 200, 255), Color3.fromRGB(200, 230, 255))
fillGradient.Rotation = 0
Instance.new("UICorner", progressFill).CornerRadius = UDim.new(0, 10)
progressFill.Transparency = 1

task.spawn(function()
    TweenService:Create(logo, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
    task.wait(0.5)

    for i = 0, 1, 0.01 do
        progressFill.Size = UDim2.new(i, 0, 1, 0)
        progressFill.Transparency = 0.5 - (i/2)
        task.wait(0.01)
    end
    
    showNotification("Welcome to YHub!")
    task.wait(0.5)
    
    TweenService:Create(loader, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
    loader:Destroy()
    toggleHub()
end)
