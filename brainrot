--// YHub Premium v14 - Aesthetic GUI
--// This version focuses on a clean, premium user interface.

--// Services
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

--// CONFIG
local HUB_WIDTH, HUB_HEIGHT = 400, 250
local autoTaseEnabled = false

--// SOUNDS
local hoverSound = Instance.new("Sound", PlayerGui)
hoverSound.SoundId = "rbxassetid://9118825481"
hoverSound.Volume = 0.3
local clickSound = Instance.new("Sound", PlayerGui)
clickSound.SoundId = "rbxassetid://9118831569"
clickSound.Volume = 0.4

--// GUI
local screenGui = Instance.new("ScreenGui", PlayerGui)
screenGui.IgnoreGuiInset = true

--// HUB FRAME
local hub = Instance.new("Frame", screenGui)
hub.Size = UDim2.new(0, HUB_WIDTH, 0, HUB_HEIGHT)
hub.Position = UDim2.new(0.5, -HUB_WIDTH/2, 0.5, -HUB_HEIGHT/2)
hub.BackgroundColor3 = Color3.fromRGB(15, 15, 20)
hub.BorderSizePixel = 0
hub.Visible = false
Instance.new("UICorner", hub).CornerRadius = UDim.new(0, 15)
Instance.new("UIStroke", hub).Color = Color3.fromRGB(90, 200, 255)
Instance.new("UIStroke", hub).Thickness = 1
Instance.new("UIStroke", hub).Transparency = 0.5

-- UIGradient for the background
local bgGradient = Instance.new("UIGradient", hub)
bgGradient.Color = ColorSequence.new(Color3.fromRGB(20, 20, 30), Color3.fromRGB(25, 25, 35))
bgGradient.Rotation = 90

-- Blur effect behind the hub
local blur = Instance.new("Frame", hub)
blur.Size = UDim2.new(1,0,1,0)
blur.BackgroundTransparency = 1
blur.ZIndex = -1
local blurEffect = Instance.new("BlurEffect", blur)
blurEffect.Size = 15
blurEffect.Parent = PlayerGui

-- Title
local title = Instance.new("TextLabel", hub)
title.Name = "Title"
title.Size = UDim2.new(1, 0, 0, 50)
title.Position = UDim2.new(0, 0, 0, 10)
title.BackgroundTransparency = 1
title.Text = "YHub"
title.Font = Enum.Font.GothamBold
title.TextSize = 38
title.TextColor3 = Color3.fromRGB(255, 255, 255)
local titleGradient = Instance.new("UIGradient", title)
titleGradient.Color = ColorSequence.new(Color3.fromRGB(90, 200, 255), Color3.fromRGB(255, 255, 255))
titleGradient.Rotation = 90

-- Subtitle
local subtitle = Instance.new("TextLabel", hub)
subtitle.Name = "Subtitle"
subtitle.Size = UDim2.new(1, 0, 0, 20)
subtitle.Position = UDim2.new(0, 0, 0, 50)
subtitle.BackgroundTransparency = 1
subtitle.Text = "Premium v14"
subtitle.Font = Enum.Font.GothamBold
subtitle.TextSize = 16
subtitle.TextColor3 = Color3.fromRGB(150, 150, 170)

-- Toggle switch for auto-tase
local toggleFrame = Instance.new("Frame", hub)
toggleFrame.Size = UDim2.new(0.6, 0, 0, 40)
toggleFrame.Position = UDim2.new(0.2, 0, 0.5, 0)
toggleFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 40)
Instance.new("UICorner", toggleFrame).CornerRadius = UDim.new(1, 0)

local toggleLabel = Instance.new("TextLabel", toggleFrame)
toggleLabel.Size = UDim2.new(1, -50, 1, 0)
toggleLabel.Position = UDim2.new(0, 0, 0, 0)
toggleLabel.BackgroundTransparency = 1
toggleLabel.Text = "AUTO-TASE"
toggleLabel.Font = Enum.Font.GothamBold
toggleLabel.TextSize = 18
toggleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleLabel.TextXAlignment = Enum.TextXAlignment.Left

local toggle = Instance.new("TextButton", toggleFrame)
toggle.Size = UDim2.new(0, 40, 0, 30)
toggle.Position = UDim2.new(1, -45, 0.5, -15)
toggle.BackgroundColor3 = Color3.fromRGB(70, 70, 90)
toggle.Text = ""
toggle.AutoButtonColor = false
Instance.new("UICorner", toggle).CornerRadius = UDim.new(1, 0)

local indicator = Instance.new("Frame", toggle)
indicator.Size = UDim2.new(0, 24, 0, 24)
indicator.Position = UDim2.new(0, 3, 0.5, -12)
indicator.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Instance.new("UICorner", indicator).CornerRadius = UDim.new(1, 0)

local function updateToggle()
    if autoTaseEnabled then
        TweenService:Create(indicator, TweenInfo.new(0.2), {Position = UDim2.new(1, -27, 0.5, -12)}):Play()
        TweenService:Create(toggle, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(90, 200, 255)}):Play()
    else
        TweenService:Create(indicator, TweenInfo.new(0.2), {Position = UDim2.new(0, 3, 0.5, -12)}):Play()
        TweenService:Create(toggle, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(70, 70, 90)}):Play()
    end
end

toggle.MouseButton1Click:Connect(function()
    autoTaseEnabled = not autoTaseEnabled
    clickSound:Play()
    updateToggle()
end)

-- Dragging
local dragging, dragInput, dragStart, startPos
local function update(input)
    local delta = input.Position - dragStart
    hub.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end
hub.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = hub.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then dragging = false end
        end)
    end
end)
hub.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)
RunService.RenderStepped:Connect(function()
    if dragging and dragInput then
        update(dragInput)
    end
end)

-- Orb button
local orb = Instance.new("TextButton", screenGui)
orb.Size = UDim2.new(0, 50, 0, 50)
orb.Position = UDim2.new(0.05, 0, 0.8, 0)
orb.Text = "â˜°"
orb.Font = Enum.Font.GothamBold
orb.TextSize = 22
orb.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
orb.TextColor3 = Color3.fromRGB(255, 255, 255)
orb.Visible = false
Instance.new("UICorner", orb).CornerRadius = UDim.new(1, 0)
Instance.new("UIStroke", orb).Color = Color3.fromRGB(90, 200, 255)
Instance.new("UIStroke", orb).Thickness = 1
Instance.new("UIStroke", orb).Transparency = 0.5

orb.MouseEnter:Connect(function()
    TweenService:Create(orb, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(60, 60, 80)}):Play()
    hoverSound:Play()
end)
orb.MouseLeave:Connect(function()
    TweenService:Create(orb, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(40, 40, 60)}):Play()
end)
orb.MouseButton1Click:Connect(function()
    hub.Visible = not hub.Visible
    blur.Visible = hub.Visible
    clickSound:Play()
end)

local function toggleHub()
    hub.Visible = true
    orb.Visible = true
    blur.Visible = true
    updateToggle()
end

-- // Loader
local loader = Instance.new("Frame", screenGui)
loader.Size = UDim2.new(1, 0, 1, 0)
loader.BackgroundColor3 = Color3.fromRGB(15, 15, 20)

local logo = Instance.new("TextLabel", loader)
logo.Size = UDim2.new(1, 0, 0.1, 0)
logo.Position = UDim2.new(0, 0, 0.4, 0)
logo.BackgroundTransparency = 1
logo.Font = Enum.Font.GothamBold
logo.TextSize = 48
logo.TextColor3 = Color3.fromRGB(255, 255, 255)
logo.Text = "YHub"
local logoGradient = Instance.new("UIGradient", logo)
logoGradient.Color = ColorSequence.new(Color3.fromRGB(90, 200, 255), Color3.fromRGB(255, 255, 255))
logoGradient.Rotation = 90
logo.TextTransparency = 1

local progressBG = Instance.new("Frame", loader)
progressBG.Size = UDim2.new(0.6, 0, 0.03, 0)
progressBG.Position = UDim2.new(0.2, 0, 0.6, 0)
progressBG.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
Instance.new("UICorner", progressBG).CornerRadius = UDim.new(0, 10)

local progressFill = Instance.new("Frame", progressBG)
progressFill.Size = UDim2.new(0, 0, 1, 0)
local fillGradient = Instance.new("UIGradient", progressFill)
fillGradient.Color = ColorSequence.new(Color3.fromRGB(90, 200, 255), Color3.fromRGB(200, 230, 255))
fillGradient.Rotation = 0
Instance.new("UICorner", progressFill).CornerRadius = UDim.new(0, 10)
progressFill.Transparency = 1

task.spawn(function()
    TweenService:Create(logo, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
    task.wait(0.5)

    for i = 0, 1, 0.01 do
        progressFill.Size = UDim2.new(i, 0, 1, 0)
        progressFill.Transparency = 0.5 - (i/2)
        task.wait(0.01)
    end
    task.wait(0.5)
    TweenService:Create(loader, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
    loader:Destroy()
    toggleHub()
end)
