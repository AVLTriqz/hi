--=============================================================
-- ⚡ YHub Premium — Full Fixed Edition
-- Script Created by: YOUNG ⚡
-- Version: v1 (fixed & upgraded)
-- Place this as a LocalScript in StarterPlayerScripts
--=============================================================

-- Services
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- ================== CONFIG ==================
local TASER_NAME = "Taser Gun"
local DEFAULT_RADIUS = 14
local HUB_W, HUB_H = 520, 360

-- Runtime state
local autoTaseEnabled = false
local auraPart, fovCircle
local playersInRange = 0
local autoTaseConnection = nil

-- ================== SOUNDS (safe defaults) ==================
local function makeSound(parent, id, vol, name)
    local ok, s = pcall(function()
        local snd = Instance.new("Sound", parent)
        snd.Name = name or "YHubSound"
        snd.SoundId = "rbxassetid://" .. tostring(id)
        snd.Volume = vol or 0.45
        snd.Looped = false
        return snd
    end)
    return ok and s or nil
end

local soundFolder = Instance.new("Folder", PlayerGui)
soundFolder.Name = "YHubSounds"

local sHover = makeSound(soundFolder, 9118825481, 0.22, "Hover")
local sClick = makeSound(soundFolder, 9118831569, 0.45, "Click")
local sOpen  = makeSound(soundFolder, 12221967, 0.5, "Open")
local sNotif = makeSound(soundFolder, 9119136260, 0.6, "Notif")

local function safePlay(s)
    pcall(function() if s then s:Play() end end)
end

-- ================== UTILS ==================
local function equipTaser()
    local tool = ReplicatedStorage:FindFirstChild(TASER_NAME)
    if tool then
        local backpack = LocalPlayer:WaitForChild("Backpack")
        if not backpack:FindFirstChild(TASER_NAME) then
            tool:Clone().Parent = backpack
        end
    end
end

-- ================== VISUAL EFFECTS (Aura & FOV) ==================
local function createAura(radius)
    radius = radius or LocalPlayer:GetAttribute("YHub_Radius") or DEFAULT_RADIUS
    if auraPart then auraPart:Destroy() end
    local part = Instance.new("Part", workspace)
    part.Name = "YHubAura"
    part.Size = Vector3.new(radius*2, radius*2, radius*2)
    part.Anchored = true
    part.CanCollide = false
    part.Material = Enum.Material.Neon
    part.Shape = Enum.PartType.Ball
    part.Transparency = 0.6
    auraPart = part

    -- rainbow color loop
    spawn(function()
        local t = 0
        while auraPart and auraPart.Parent do
            t = t + 0.009
            auraPart.Color = Color3.fromHSV(t % 1, 0.95, 0.95)
            local char = LocalPlayer.Character
            local hrp = char and char:FindFirstChild("HumanoidRootPart")
            if hrp then
                auraPart.CFrame = hrp.CFrame
            end
            RunService.RenderStepped:Wait()
        end
    end)
end

local function createFOV(radius)
    radius = radius or LocalPlayer:GetAttribute("YHub_Radius") or DEFAULT_RADIUS
    if fovCircle then fovCircle:Destroy() end
    local part = Instance.new("Part", workspace)
    part.Name = "YHubFOV"
    part.Anchored = true
    part.CanCollide = false
    part.Size = Vector3.new(radius*2, 0.2, radius*2)
    part.Material = Enum.Material.Neon
    part.Transparency = 0.55
    part.Shape = Enum.PartType.Cylinder
    fovCircle = part

    spawn(function()
        local t = 0
        while fovCircle and fovCircle.Parent do
            t = t + 0.009
            fovCircle.Color = Color3.fromHSV(t % 1, 0.95, 0.95)
            local char = LocalPlayer.Character
            local hrp = char and char:FindFirstChild("HumanoidRootPart")
            if hrp then
                fovCircle.CFrame = CFrame.new(hrp.Position + Vector3.new(0,0.3,0)) * CFrame.Angles(math.rad(90),0,0)
            end
            RunService.RenderStepped:Wait()
        end
    end)
end

-- ================== AUTO-TASE logic (single connection) ==================
local function startAutoTase(radius)
    if autoTaseConnection then return end
    autoTaseConnection = RunService.RenderStepped:Connect(function()
        if not autoTaseEnabled then return end
        local char = LocalPlayer.Character
        local hrp = char and char:FindFirstChild("HumanoidRootPart")
        if hrp then
            local r = radius or LocalPlayer:GetAttribute("YHub_Radius") or DEFAULT_RADIUS
            if not auraPart then createAura(r) end
            if not fovCircle then createFOV(r) end
            local taser = LocalPlayer.Backpack:FindFirstChild(TASER_NAME) or (char and char:FindFirstChild(TASER_NAME))
            if taser then
                local count = 0
                for _,pl in ipairs(Players:GetPlayers()) do
                    if pl ~= LocalPlayer and pl.Character and pl.Character:FindFirstChild("HumanoidRootPart") then
                        local otherHRP = pl.Character.HumanoidRootPart
                        local dist = (hrp.Position - otherHRP.Position).Magnitude
                        if dist <= r then
                            count = count + 1
                            pcall(function() taser:Activate() end)
                        end
                    end
                end
                playersInRange = count
            end
        end
    end)
end

local function stopAutoTase()
    if autoTaseConnection then
        autoTaseConnection:Disconnect()
        autoTaseConnection = nil
    end
    if auraPart then auraPart:Destroy(); auraPart = nil end
    if fovCircle then fovCircle:Destroy(); fovCircle = nil end
    playersInRange = 0
end

-- ================== GUI BUILD ==================
local gui = Instance.new("ScreenGui")
gui.Name = "YHubPremiumGUI"
gui.ResetOnSpawn = false
gui.IgnoreGuiInset = true
gui.Parent = PlayerGui

-- Helper: create rounded frame
local function roundedFrame(parent, size, pos, bg)
    local f = Instance.new("Frame", parent)
    f.Size = size
    f.Position = pos
    f.BackgroundColor3 = bg or Color3.fromRGB(18,18,24)
    f.BorderSizePixel = 0
    local c = Instance.new("UICorner", f); c.CornerRadius = UDim.new(0,12)
    return f
end

-- ---------- Loading screen (glass + italic glowing text) ----------
local loading = Instance.new("Frame", gui)
loading.Name = "YHubLoading"
loading.Size = UDim2.new(1,0,1,0)
loading.Position = UDim2.new(0,0,0,0)
loading.BackgroundColor3 = Color3.fromRGB(12,12,20)
local loadingGrad = Instance.new("UIGradient", loading)
loadingGrad.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.fromRGB(8,8,14)), ColorSequenceKeypoint.new(1, Color3.fromRGB(20,8,30))})
loadingGrad.Rotation = 90

local glowText = Instance.new("TextLabel", loading)
glowText.AnchorPoint = Vector2.new(0.5,0.5)
glowText.Position = UDim2.new(0.5,0,0.38,0)
glowText.Size = UDim2.new(0.8,0,0.12,0)
glowText.BackgroundTransparency = 1
glowText.Font = Enum.Font.GothamItalic
glowText.TextSize = 34
glowText.TextColor3 = Color3.fromRGB(200,200,255)
glowText.Text = "𝑌𝐻𝑢𝑏 𝑃𝑟𝑒𝑚𝑖𝑢𝑚 · Loading..."

-- progress bar
local barBG = Instance.new("Frame", loading)
barBG.Size = UDim2.new(0.56,0,0.05,0)
barBG.Position = UDim2.new(0.22,0,0.62,0)
barBG.BackgroundColor3 = Color3.fromRGB(36,36,48)
barBG.BorderSizePixel = 0
local barCorner = Instance.new("UICorner", barBG); barCorner.CornerRadius = UDim.new(0,14)

local barFill = Instance.new("Frame", barBG)
barFill.Size = UDim2.new(0,0,1,0)
barFill.BackgroundColor3 = Color3.fromRGB(80,200,255)
local barFillCorner = Instance.new("UICorner", barFill); barFillCorner.CornerRadius = UDim.new(0,14)

spawn(function()
    -- glowing text color loop
    local t = 0
    while loading and loading.Parent do
        t = t + 0.01
        glowText.TextColor3 = Color3.fromHSV(t%1, 0.85, 1)
        RunService.RenderStepped:Wait()
    end
end)

-- ---------- Dock orb (draggable) ----------
local dock = Instance.new("ImageButton", gui)
dock.Name = "YHubDock"
dock.Size = UDim2.new(0,64,0,64)
-- try read saved position from player attributes (session)
local savedX = LocalPlayer:GetAttribute("YHub_DockX")
local savedY = LocalPlayer:GetAttribute("YHub_DockY")
if savedX and savedY then
    dock.Position = UDim2.new(0, savedX, 0, savedY)
else
    dock.Position = UDim2.new(0.06, 0, 0.78, 0)
end
dock.AnchorPoint = Vector2.new(0.5,0.5)
dock.BackgroundTransparency = 1
dock.Image = "" -- keep blank so it looks like flat orb; replace if you want texture
dock.AutoButtonColor = false
local dockBg = Instance.new("Frame", dock)
dockBg.Size = UDim2.new(1,0,1,0); dockBg.Position = UDim2.new(0,0,0,0)
dockBg.BorderSizePixel = 0; dockBg.BackgroundColor3 = Color3.fromRGB(24,24,34)
local dockCorner = Instance.new("UICorner", dockBg); dockCorner.CornerRadius = UDim.new(1,0)
local dockStroke = Instance.new("UIStroke", dockBg); dockStroke.Thickness = 2; dockStroke.Color = Color3.fromRGB(80,200,255)
local dockLabel = Instance.new("TextLabel", dock)
dockLabel.Size = UDim2.new(1,0,1,0); dockLabel.BackgroundTransparency = 1; dockLabel.Text = "⚡"; dockLabel.Font = Enum.Font.GothamBold; dockLabel.TextSize = 28; dockLabel.TextColor3 = Color3.fromRGB(240,240,255)

-- dock stroke color animate
spawn(function()
    local t = 0
    while dock and dock.Parent do
        t = t + 0.01
        dockStroke.Color = Color3.fromHSV((t*0.05) % 1, 0.9, 0.95)
        RunService.RenderStepped:Wait()
    end
end)

-- dock dragging
local draggingDock = false
local dockDragStart, dockStartPos, dockInput
dock.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        draggingDock = true
        dockDragStart = input.Position
        dockStartPos = dock.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                draggingDock = false
                -- save position to attributes
                local abs = dock.AbsolutePosition
                LocalPlayer:SetAttribute("YHub_DockX", math.floor(abs.X))
                LocalPlayer:SetAttribute("YHub_DockY", math.floor(abs.Y))
            end
        end)
    end
end)
dock.InputChanged:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then dockInput = input end end)
RunService.RenderStepped:Connect(function()
    if draggingDock and dockInput then
        local delta = dockInput.Position - dockDragStart
        local newX = dockStartPos.X.Offset + delta.X
        local newY = dockStartPos.Y.Offset + delta.Y
        local cam = workspace.CurrentCamera
        local vw, vh = (cam and cam.ViewportSize.X) or 1280, (cam and cam.ViewportSize.Y) or 720
        newX = math.clamp(newX, 8, vw - 72)
        newY = math.clamp(newY, 8, vh - 72)
        dock.Position = UDim2.new(0, newX, 0, newY)
    end
end)

-- ---------- Hub (glass panel with sidebar tabs) ----------
local hub = Instance.new("Frame", gui)
hub.Name = "YHubHub"
hub.Size = UDim2.new(0, HUB_W, 0, HUB_H)
hub.Position = UDim2.new(-1, 0, 0.12, 0) -- hidden left by default
hub.BackgroundColor3 = Color3.fromRGB(16,16,22)
hub.BackgroundTransparency = 0.03
hub.BorderSizePixel = 0
hub.Visible = false
local hubCorner = Instance.new("UICorner", hub); hubCorner.CornerRadius = UDim.new(0,16)
local hubStroke = Instance.new("UIStroke", hub); hubStroke.Thickness = 2; hubStroke.Color = Color3.fromRGB(80,200,255); hubStroke.Transparency = 0.72

-- watermark / credits
local watermark = Instance.new("TextLabel", gui)
watermark.AnchorPoint = Vector2.new(1,1)
watermark.Position = UDim2.new(1, -12, 1, -8)
watermark.Size = UDim2.new(0, 240, 0, 22)
watermark.BackgroundTransparency = 1
watermark.Font = Enum.Font.GothamItalic
watermark.TextSize = 14
watermark.TextColor3 = Color3.fromRGB(160,160,220)
watermark.Text = "YHub Premium | by YOUNG ⚡"

-- sidebar
local sidebar = Instance.new("Frame", hub)
sidebar.Size = UDim2.new(0, 150, 1, 0)
sidebar.Position = UDim2.new(0,0,0,0)
sidebar.BackgroundTransparency = 1

local function makeTab(buttonY, emoji, name)
    local b = Instance.new("TextButton", sidebar)
    b.Size = UDim2.new(1, -24, 0, 44)
    b.Position = UDim2.new(0, 12, 0, buttonY)
    b.BackgroundColor3 = Color3.fromRGB(24,24,32)
    b.AutoButtonColor = false
    b.Text = ""
    local corner = Instance.new("UICorner", b); corner.CornerRadius = UDim.new(0,8)
    local stroke = Instance.new("UIStroke", b); stroke.Thickness = 1; stroke.Color = Color3.fromRGB(80,160,255); stroke.Transparency = 0.9

    local ic = Instance.new("TextLabel", b)
    ic.Size = UDim2.new(0,30,0,30); ic.Position = UDim2.new(0,8,0,7)
    ic.BackgroundTransparency = 1; ic.Font = Enum.Font.GothamBold; ic.TextSize = 18; ic.Text = emoji

    local lbl = Instance.new("TextLabel", b)
    lbl.Size = UDim2.new(1, -56, 1, 0)
    lbl.Position = UDim2.new(0,46,0,0)
    lbl.BackgroundTransparency = 1
    lbl.Font = Enum.Font.GothamBold; lbl.TextSize = 14; lbl.Text = name; lbl.TextColor3 = Color3.fromRGB(230,230,255); lbl.TextXAlignment = Enum.TextXAlignment.Left

    return b
end

local tabHome = makeTab(12, "🏠", "Home")
local tabAuto = makeTab(68, "⚡", "Auto-Tase")
local tabSet  = makeTab(124, "🎨", "Settings")
local tabCred = makeTab(180, "👑", "Credits")

-- content area
local content = Instance.new("Frame", hub)
content.Size = UDim2.new(1, -150, 1, -24)
content.Position = UDim2.new(0,150,0,12)
content.BackgroundTransparency = 1

local pages = {}
local function newPage(name)
    local p = Instance.new("Frame", content)
    p.Name = "Page_" .. name
    p.Size = UDim2.new(1,0,1,0)
    p.BackgroundTransparency = 1
    p.Visible = false
    pages[name] = p
    return p
end

-- --- Home page ---
local home = newPage("Home")
local homeTitle = Instance.new("TextLabel", home)
homeTitle.Size = UDim2.new(1, -24, 0, 28); homeTitle.Position = UDim2.new(0,12,0,0)
homeTitle.BackgroundTransparency = 1; homeTitle.Font = Enum.Font.GothamBold; homeTitle.TextSize = 18
homeTitle.Text = "Welcome — YHub Premium"; homeTitle.TextColor3 = Color3.fromRGB(240,240,255); homeTitle.TextXAlignment = Enum.TextXAlignment.Left

local homeBody = Instance.new("TextLabel", home)
homeBody.Size = UDim2.new(1, -24, 0, 110); homeBody.Position = UDim2.new(0,12,0,36)
homeBody.BackgroundTransparency = 1; homeBody.Font = Enum.Font.Gotham; homeBody.TextSize = 14
homeBody.TextColor3 = Color3.fromRGB(200,200,220); homeBody.TextWrapped = true
homeBody.Text = "Ultra dashboard interface with glass look, animated toggles, theme presets, and auto-tase features. Use the Auto-Tase tab to enable automated taser firing within the radius."

local liveStat = Instance.new("TextLabel", home)
liveStat.Size = UDim2.new(1, -24, 0, 22); liveStat.Position = UDim2.new(0,12,0,150)
liveStat.BackgroundTransparency = 1; liveStat.Font = Enum.Font.GothamSemibold; liveStat.TextSize = 14
liveStat.TextColor3 = Color3.fromRGB(170,255,255); liveStat.Text = "Players in range: 0"

-- --- Auto page ---
local autoPage = newPage("Auto-Tase")
local autoTitle = Instance.new("TextLabel", autoPage)
autoTitle.Size = UDim2.new(1,-24,0,28); autoTitle.Position = UDim2.new(0,12,0,0)
autoTitle.BackgroundTransparency = 1; autoTitle.Font = Enum.Font.GothamBold; autoTitle.TextSize = 18
autoTitle.TextColor3 = Color3.fromRGB(240,240,255); autoTitle.Text = "Auto-Tase Controls"

-- animated switch helper
local function makeSwitch(parent, labelText, initial)
    local container = Instance.new("Frame", parent)
    container.Size = UDim2.new(1,-24,0,56)
    container.Position = UDim2.new(0,12,0,40 + (#parent:GetChildren()*0))
    container.BackgroundTransparency = 1

    local lbl = Instance.new("TextLabel", container)
    lbl.Size = UDim2.new(0.68,0,1,0); lbl.BackgroundTransparency = 1; lbl.Font = Enum.Font.Gotham; lbl.TextSize = 14
    lbl.Text = labelText; lbl.TextColor3 = Color3.fromRGB(220,220,235); lbl.TextXAlignment = Enum.TextXAlignment.Left

    local sw = Instance.new("TextButton", container)
    sw.Size = UDim2.new(0,72,0,36)
    sw.AnchorPoint = Vector2.new(1,0.5)
    sw.Position = UDim2.new(1, -12, 0.5, 0)
    sw.BackgroundColor3 = Color3.fromRGB(40,40,52)
    sw.AutoButtonColor = false
    local swCorner = Instance.new("UICorner", sw); swCorner.CornerRadius = UDim.new(0,18)
    local fill = Instance.new("Frame", sw)
    fill.Size = initial and UDim2.new(0,38,1,0) or UDim2.new(0,8,1,0)
    fill.Position = initial and UDim2.new(1,-38,0,0) or UDim2.new(0,0,0,0)
    fill.BackgroundColor3 = initial and Color3.fromRGB(80,200,255) or Color3.fromRGB(160,160,170)
    local fillCorner = Instance.new("UICorner", fill); fillCorner.CornerRadius = UDim.new(0,16)

    return {
        Container = container,
        Button = sw,
        Fill = fill,
        Set = function(state)
            if state then
                TweenService:Create(fill, TweenInfo.new(0.22, Enum.EasingStyle.Quad), {Size = UDim2.new(0,38,1,0), Position = UDim2.new(1,-38,0,0), BackgroundColor3 = Color3.fromRGB(80,200,255)}):Play()
            else
                TweenService:Create(fill, TweenInfo.new(0.22, Enum.EasingStyle.Quad), {Size = UDim2.new(0,8,1,0), Position = UDim2.new(0,0,0,0), BackgroundColor3 = Color3.fromRGB(160,160,170)}):Play()
            end
        end
    }
end

local autoSwitch = makeSwitch(autoPage, "Enable Auto-Tase", false)
autoSwitch.Button.MouseButton1Click:Connect(function()
    autoTaseEnabled = not autoTaseEnabled
    autoSwitch.Set(autoTaseEnabled)
    if autoTaseEnabled then
        startAutoTase(LocalPlayer:GetAttribute("YHub_Radius") or DEFAULT_RADIUS)
        showToast = showToast or function() end -- ensure exists (filled later)
        -- showToast will be defined below; safe call here
    else
        stopAutoTase()
    end
    safePlay(sClick)
end)

local equipBtn = Instance.new("TextButton", autoPage)
equipBtn.Size = UDim2.new(0.48,0,0,36)
equipBtn.Position = UDim2.new(0,12,0,110)
equipBtn.BackgroundColor3 = Color3.fromRGB(42,42,56)
equipBtn.Font = Enum.Font.GothamBold; equipBtn.TextSize = 14; equipBtn.Text = "Equip Taser"
equipBtn.TextColor3 = Color3.fromRGB(235,235,245)
local equipCorner = Instance.new("UICorner", equipBtn); equipCorner.CornerRadius = UDim.new(0,8)
equipBtn.MouseButton1Click:Connect(function()
    equipTaser()
    safePlay(sClick)
    -- toast defined further down; call later
end)

-- --- Settings page ---
local setPage = newPage("Settings")
local setTitle = Instance.new("TextLabel", setPage)
setTitle.Size = UDim2.new(1,-24,0,28); setTitle.Position = UDim2.new(0,12,0,0)
setTitle.BackgroundTransparency = 1; setTitle.Font = Enum.Font.GothamBold; setTitle.TextSize = 18
setTitle.TextColor3 = Color3.fromRGB(240,240,255); setTitle.Text = "Settings"

-- Themes
local themes = {
    Neon = { bg = Color3.fromRGB(12,12,18), panel = Color3.fromRGB(18,18,26), accent = Color3.fromRGB(80,200,255) },
    Dark  = { bg = Color3.fromRGB(14,14,18), panel = Color3.fromRGB(22,22,28), accent = Color3.fromRGB(120,120,220) },
    Sunset= { bg = Color3.fromRGB(32,12,10), panel = Color3.fromRGB(44,20,16), accent = Color3.fromRGB(255,140,80) }
}

local function applyTheme(name)
    local t = themes[name] or themes.Neon
    hub.BackgroundColor3 = t.bg
    hubStroke.Color = t.accent
    -- recolor sidebar buttons strokes
    for _,btn in pairs({tabHome,tabAuto,tabSet,tabCred}) do
        local stroke = btn:FindFirstChildWhichIsA("UIStroke")
        if stroke then stroke.Color = t.accent end
    end
    watermark.TextColor3 = t.accent:lerp(Color3.fromRGB(200,200,220), 0.3)
    -- save theme attribute
    LocalPlayer:SetAttribute("YHub_Theme", name)
end

-- Theme buttons
local themeLabel = Instance.new("TextLabel", setPage)
themeLabel.Size = UDim2.new(1,-24,0,18); themeLabel.Position = UDim2.new(0,12,0,44)
themeLabel.BackgroundTransparency = 1; themeLabel.Font = Enum.Font.Gotham; themeLabel.TextSize = 13
themeLabel.TextColor3 = Color3.fromRGB(200,200,220); themeLabel.Text = "Theme Presets"

local xOff = 12
for name,_ in pairs(themes) do
    local b = Instance.new("TextButton", setPage)
    b.Size = UDim2.new(0,100,0,32)
    b.Position = UDim2.new(0, xOff, 0, 68)
    b.BackgroundColor3 = Color3.fromRGB(36,36,46)
    b.Font = Enum.Font.GothamBold; b.TextSize = 14; b.Text = name
    local c = Instance.new("UICorner", b); c.CornerRadius = UDim.new(0,8)
    b.MouseButton1Click:Connect(function()
        applyTheme(name)
        safePlay(sClick)
    end)
    xOff = xOff + 110
end

-- Radius slider
local radiusLabel = Instance.new("TextLabel", setPage)
radiusLabel.Size = UDim2.new(1,-24,0,18); radiusLabel.Position = UDim2.new(0,12,0,120)
radiusLabel.BackgroundTransparency = 1; radiusLabel.Font = Enum.Font.Gotham; radiusLabel.TextSize = 13
radiusLabel.TextColor3 = Color3.fromRGB(200,200,220)
local sliderBG = Instance.new("Frame", setPage)
sliderBG.Size = UDim2.new(1,-48,0,18); sliderBG.Position = UDim2.new(0,24,0,146); sliderBG.BackgroundColor3 = Color3.fromRGB(40,40,52)
local sliderCorner = Instance.new("UICorner", sliderBG); sliderCorner.CornerRadius = UDim.new(0,8)
local sliderFill = Instance.new("Frame", sliderBG); sliderFill.Size = UDim2.new(0.25,0,1,0); sliderFill.BackgroundColor3 = Color3.fromRGB(80,200,255)
local fillCorner = Instance.new("UICorner", sliderFill); fillCorner.CornerRadius = UDim.new(0,8)
local handle = Instance.new("TextButton", sliderBG); handle.Size = UDim2.new(0,16,0,16); handle.Position = UDim2.new(0.25, -8, 0.5, -8); handle.BackgroundColor3 = Color3.fromRGB(240,240,245); handle.Text = ""; handle.AutoButtonColor = false
local draggingHandle = false

local function setRadiusFromPercent(p)
    p = math.clamp(p,0,1)
    sliderFill.Size = UDim2.new(p,0,1,0)
    handle.Position = UDim2.new(p, -8, 0.5, -8)
    local r = math.floor(6 + p * 54) -- => 6..60
    radiusLabel.Text = "Aura / Auto-Tase Radius: " .. tostring(r)
    LocalPlayer:SetAttribute("YHub_Radius", r)
    if auraPart then auraPart.Size = Vector3.new(r*2,r*2,r*2) end
    if fovCircle then fovCircle.Size = Vector3.new(r*2,0.2,r*2) end
end

handle.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        draggingHandle = true
        input.Changed:Connect(function() if input.UserInputState == Enum.UserInputState.End then draggingHandle = false end end)
    end
end)
RunService.RenderStepped:Connect(function()
    if draggingHandle then
        local mx = UserInputService:GetMouseLocation().X
        local rel = math.clamp(mx - sliderBG.AbsolutePosition.X, 0, sliderBG.AbsoluteSize.X)
        setRadiusFromPercent(rel / sliderBG.AbsoluteSize.X)
    end
end)

-- initialize slider
local initR = LocalPlayer:GetAttribute("YHub_Radius") or DEFAULT_RADIUS
local pInit = (initR - 6) / 54
setRadiusFromPercent(math.clamp(pInit,0,1))

-- --- Credits page ---
local credPage = newPage("Credits")
local credTitle = Instance.new("TextLabel", credPage)
credTitle.Size = UDim2.new(1,-24,0,28); credTitle.Position = UDim2.new(0,12,0,0)
credTitle.BackgroundTransparency = 1; credTitle.Font = Enum.Font.GothamBold; credTitle.TextSize = 18
credTitle.TextColor3 = Color3.fromRGB(240,240,255); credTitle.Text = "Credits"

local credBody = Instance.new("TextLabel", credPage)
credBody.Size = UDim2.new(1,-24,0,140); credBody.Position = UDim2.new(0,12,0,36)
credBody.BackgroundTransparency = 1; credBody.Font = Enum.Font.GothamItalic; credBody.TextSize = 14
credBody.TextColor3 = Color3.fromRGB(200,200,220)
credBody.Text = "Made with ⚡ by YOUNG\n\nThanks for using YHub Premium. Contact YOUNG for custom themes and premium builds."

-- ---------- Tab switching ----------
local currentTab = "Home"
local function switchTo(tabName)
    for k,v in pairs(pages) do v.Visible = false end
    if pages[tabName] then
        pages[tabName].Visible = true
        pages[tabName].Position = UDim2.new(0,16,0,0)
        TweenService:Create(pages[tabName], TweenInfo.new(0.28, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {Position = UDim2.new(0,0,0,0)}):Play()
    end
    -- highlight button
    for _,b in pairs({tabHome,tabAuto,tabSet,tabCred}) do b.BackgroundColor3 = Color3.fromRGB(24,24,32) end
    if tabName == "Home" then tabHome.BackgroundColor3 = Color3.fromRGB(36,36,46) end
    if tabName == "Auto-Tase" then tabAuto.BackgroundColor3 = Color3.fromRGB(36,36,46) end
    if tabName == "Settings" then tabSet.BackgroundColor3 = Color3.fromRGB(36,36,46) end
    if tabName == "Credits" then tabCred.BackgroundColor3 = Color3.fromRGB(36,36,46) end
    currentTab = tabName
    safePlay(sClick)
end

tabHome.MouseButton1Click:Connect(function() switchTo("Home") end)
tabAuto.MouseButton1Click:Connect(function() switchTo("Auto-Tase") end)
tabSet.MouseButton1Click:Connect(function() switchTo("Settings") end)
tabCred.MouseButton1Click:Connect(function() switchTo("Credits") end)

-- ---------- Toast Notifications ----------
local toastFolder = Instance.new("Folder", gui); toastFolder.Name = "Toasts"
local function showToast(title, body, duration)
    duration = duration or 3.2
    local frame = Instance.new("Frame", toastFolder)
    frame.Size = UDim2.new(0,320,0,72)
    frame.Position = UDim2.new(1,-340,0.06,0)
    frame.AnchorPoint = Vector2.new(1,0)
    frame.BackgroundColor3 = Color3.fromRGB(20,20,28)
    frame.BorderSizePixel = 0
    local corner = Instance.new("UICorner", frame); corner.CornerRadius = UDim.new(0,10)
    local stroke = Instance.new("UIStroke", frame); stroke.Color = Color3.fromRGB(80,180,255); stroke.Transparency = 0.82

    local tl = Instance.new("TextLabel", frame)
    tl.Size = UDim2.new(1,-16,0,20); tl.Position = UDim2.new(0,12,0,8)
    tl.BackgroundTransparency = 1; tl.Font = Enum.Font.GothamBold; tl.TextSize = 15; tl.TextColor3 = Color3.fromRGB(240,240,255); tl.Text = title
    local bl = Instance.new("TextLabel", frame)
    bl.Size = UDim2.new(1,-16,0,36); bl.Position = UDim2.new(0,12,0,30)
    bl.BackgroundTransparency = 1; bl.Font = Enum.Font.Gotham; bl.TextSize = 13; bl.TextColor3 = Color3.fromRGB(200,200,220); bl.TextWrapped = true; bl.Text = body

    TweenService:Create(frame, TweenInfo.new(0.36, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = UDim2.new(1,-16,0.06,0)}):Play()
    safePlay(sNotif)
    delay(duration, function()
        TweenService:Create(frame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {Position = UDim2.new(1,-340,0.06,0)}):Play()
        wait(0.33)
        frame:Destroy()
    end)
end

-- attach missing references for earlier calls
-- equip button toast and other late-defined uses
equipBtn.MouseButton1Click:Connect(function()
    equipTaser()
    showToast("Taser", "Taser equipped to your backpack.", 2.2)
    safePlay(sClick)
end)

-- ---------- Open / Close hub from dock ----------
local hubVisible = false
local function openHub()
    if hubVisible then return end
    hubVisible = true
    hub.Visible = true
    hub.Position = UDim2.new(-1, 0, 0.12, 0)
    TweenService:Create(hub, TweenInfo.new(0.36, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {Position = UDim2.new(0.04,0,0.12,0)}):Play()
    safePlay(sOpen)
    showToast("YHub Premium", "Welcome — Script by YOUNG", 3)
    -- apply saved theme
    local themeName = LocalPlayer:GetAttribute("YHub_Theme") or "Neon"
    applyTheme(themeName)
    switchTo(currentTab or "Home")
end
local function closeHub()
    if not hubVisible then return end
    hubVisible = false
    TweenService:Create(hub, TweenInfo.new(0.24, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {Position = UDim2.new(-1,0,0.12,0)}):Play()
    delay(0.26, function() if not hubVisible then hub.Visible = false end end)
end

dock.MouseButton1Click:Connect(function()
    if hubVisible then closeHub() else openHub() end
end)

-- ESC close
UserInputService.InputBegan:Connect(function(input, processed)
    if processed then return end
    if input.KeyCode == Enum.KeyCode.Escape then
        if hubVisible then closeHub() end
    end
end)

-- ---------- Loading anim (fills then fades) ----------
spawn(function()
    local start = tick()
    local duration = 2.6
    while tick() - start < duration do
        local p = (tick() - start) / duration
        barFill:TweenSize(UDim2.new(math.clamp(p,0,1),0,1,0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.06, true)
        RunService.RenderStepped:Wait()
    end
    barFill:TweenSize(UDim2.new(1,0,1,0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.12, true)
    wait(0.18)
    -- fade out loader
    TweenService:Create(loading, TweenInfo.new(0.45, Enum.EasingStyle.Cubic, Enum.EasingDirection.InOut), {BackgroundTransparency = 1}):Play()
    TweenService:Create(glowText, TweenInfo.new(0.45), {TextTransparency = 1}):Play()
    wait(0.45)
    loading:Destroy()
    -- show dock after load
    dock.Visible = true
end)

-- hide dock until loading done
dock.Visible = false

-- ---------- Live updates ----------
spawn(function()
    while true do
        liveStat.Text = "Players in range: " .. tostring(playersInRange)
        wait(0.25)
    end
end)

-- initialize: equip taser, start auto-tase handler (won't fire until enabled)
equipTaser()
startAutoTase(LocalPlayer:GetAttribute("YHub_Radius") or DEFAULT_RADIUS)

-- safety cleanup
game:BindToClose(function()
    stopAutoTase()
    if auraPart then auraPart:Destroy() end
    if fovCircle then fovCircle:Destroy() end
end)

-- final ready toast after small delay
delay(0.6, function() showToast("Loaded", "YHub Premium ready — by YOUNG", 2.6) end)

-- End of script
