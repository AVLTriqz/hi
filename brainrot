-- Karker Hub v4.0 - Verbose Expanded Edition
-- Long-form, fully expanded, verbose and explicit definitions
-- This file intentionally verbose to help people who prefer to read everything in-line.
-- Author: YOUNG (expanded)

-- NOTE: This script is a LocalScript intended for StarterPlayerScripts or StarterGui.
-- It contains both client-side visuals and placeholders where server-side security would be required.

-- =====================================================================
-- SECTION 0: SERVICES & SHORTCUTS (explicitly spelled out)
-- =====================================================================
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local Debris = game:GetService("Debris")

-- Player reference
local player = Players.LocalPlayer
if not player then
    -- Wait for player to exist (rare in LocalScript when placed correctly)
    player = Players.PlayerAdded:Wait()
end

-- Helper function to safely get character
local function getCharacter(waitFor)
    waitFor = waitFor == nil and true or waitFor
    if player.Character and player.Character.Parent then
        return player.Character
    end
    if waitFor then
        return player.CharacterAdded:Wait()
    else
        return nil
    end
end

-- =====================================================================
-- SECTION 1: TWEEN UTILITY (explicit creation per call)
-- =====================================================================
local function Tween(obj, duration, properties, easingStyle, easingDir)
    easingStyle = easingStyle or Enum.EasingStyle.Quad
    easingDir = easingDir or Enum.EasingDirection.Out
    local info = TweenInfo.new(duration, easingStyle, easingDir)
    local t = TweenService:Create(obj, info, properties)
    t:Play()
    return t
end

-- =====================================================================
-- SECTION 2: UI CREATION - NOTIFICATIONS (explicit, step-by-step)
-- =====================================================================
local function createNotificationsGui()
    local gui = Instance.new("ScreenGui")
    gui.Name = "KH_Notifications_Verbose"
    gui.ResetOnSpawn = false
    gui.Parent = player:WaitForChild("PlayerGui")

    local holder = Instance.new("Frame", gui)
    holder.Name = "Holder"
    holder.AnchorPoint = Vector2.new(0,1)
    holder.Position = UDim2.new(0, 16, 1, -16)
    holder.Size = UDim2.new(0, 320, 0, 260)
    holder.BackgroundTransparency = 1

    local layout = Instance.new("UIListLayout", holder)
    layout.SortOrder = Enum.SortOrder.LayoutOrder
    layout.Padding = UDim.new(0,8)

    return gui, holder
end

local notGui, notHolder = createNotificationsGui()

local function createNotification(title, text, duration)
    duration = duration or 4
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1,0,0,0)
    frame.BackgroundColor3 = Color3.fromRGB(24,24,24)
    frame.BorderSizePixel = 0
    frame.ClipsDescendants = true
    frame.LayoutOrder = tick()
    frame.Parent = notHolder

    local corner = Instance.new("UICorner", frame)
    corner.CornerRadius = UDim.new(0,10)

    local titleLabel = Instance.new("TextLabel", frame)
    titleLabel.Size = UDim2.new(1, -12, 0, 20)
    titleLabel.Position = UDim2.new(0,6,0,6)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.Text = title or "Notice"
    titleLabel.TextColor3 = Color3.fromRGB(255,200,50)
    titleLabel.TextSize = 16
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left

    local body = Instance.new("TextLabel", frame)
    body.Size = UDim2.new(1,-12,0,48)
    body.Position = UDim2.new(0,6,0,26)
    body.BackgroundTransparency = 1
    body.Font = Enum.Font.Gotham
    body.Text = text or ""
    body.TextSize = 14
    body.TextColor3 = Color3.fromRGB(235,235,235)
    body.TextWrapped = true
    body.TextXAlignment = Enum.TextXAlignment.Left

    -- animate expand
    Tween(frame, 0.28, {Size = UDim2.new(1,0,0,76)})

    -- auto remove
    task.delay(duration, function()
        Tween(frame, 0.2, {Size = UDim2.new(1,0,0,0)})
        task.wait(0.22)
        frame:Destroy()
    end)
end

-- Convenience wrapper
local function notify(title, text, dur)
    pcall(function()
        createNotification(title, text, dur)
    end)
end

-- =====================================================================
-- SECTION 3: LOADING SCREEN (expanded, long-form with many steps)
-- =====================================================================
local function createLoadingScreen()
    local gui = Instance.new("ScreenGui")
    gui.Name = "KH_Loading_Verbose"
    gui.ResetOnSpawn = false
    gui.Parent = player:WaitForChild("PlayerGui")

    -- background frame (full screen)
    local bg = Instance.new("Frame", gui)
    bg.Name = "Background"
    bg.Size = UDim2.new(1,0,1,0)
    bg.Position = UDim2.new(0,0,0,0)
    bg.BackgroundColor3 = Color3.fromRGB(12,12,12)
    bg.BorderSizePixel = 0

    -- decorative vignette image
    local vign = Instance.new("ImageLabel", bg)
    vign.Name = "Vignette"
    vign.Size = UDim2.new(1.4,0,1.4,0)
    vign.Position = UDim2.new(-0.2,0,-0.2,0)
    vign.Image = "rbxassetid://5058094581"
    vign.BackgroundTransparency = 1
    vign.ImageTransparency = 0.6

    -- cinematic center label
    local center = Instance.new("TextLabel", bg)
    center.Name = "CenterMessage"
    center.Size = UDim2.new(1,0,0,120)
    center.Position = UDim2.new(0,0,0.42,0)
    center.BackgroundTransparency = 1
    center.Font = Enum.Font.GothamBlack
    center.TextSize = 26
    center.TextColor3 = Color3.fromRGB(255,255,255)
    center.Text = ""
    center.TextWrapped = true

    -- snow particle setup (attached to invisible part)
    local snowAnchor = Instance.new("Part")
    snowAnchor.Name = "KH_SnowAnchor"
    snowAnchor.Anchored = true
    snowAnchor.CanCollide = false
    snowAnchor.Transparency = 1
    snowAnchor.Size = Vector3.new(120, 2, 120)
    snowAnchor.CFrame = workspace.CurrentCamera and workspace.CurrentCamera.CFrame or CFrame.new(0,100,0)
    snowAnchor.Parent = workspace

    local p = Instance.new("ParticleEmitter", snowAnchor)
    p.Texture = "rbxassetid://241594314"
    p.Rate = 40
    p.Lifetime = NumberRange.new(4,8)
    p.Speed = NumberRange.new(2,6)
    p.Size = NumberSequence.new(0.8)
    p.VelocitySpread = 180

    -- typewriter function (explicit char loop)
    local text = "KARKER HUB LOADING... PLEASE WAIT" 
    task.spawn(function()
        for i = 1, #text do
            center.Text = string.sub(text,1,i)
            task.wait(0.035)
        end
        task.wait(1.1)
        -- fade out whole screen
        Tween(bg, 0.9, {BackgroundTransparency = 1})
        Tween(vign, 0.9, {ImageTransparency = 1})
        Tween(center, 0.9, {TextTransparency = 1})
        task.wait(1.05)
        -- cleanup
        if snowAnchor and snowAnchor.Parent then snowAnchor:Destroy() end
        if gui and gui.Parent then gui:Destroy() end
    end)
end

-- create loading screen and block further UI creation until destroyed
createLoadingScreen()

-- wait some time to ensure loading UI is visible (but in the verbose version we will chain spawn of main UI when loading finishes)
-- we'll listen for the loading GUI removal to initialize the main hub

-- =====================================================================
-- SECTION 4: MAIN GUI (very verbose explicit creation for every element)
-- =====================================================================

local function createMainGui()
    local gui = Instance.new("ScreenGui")
    gui.Name = "KarkerHub_Main_Verbose"
    gui.ResetOnSpawn = false
    gui.Parent = player:WaitForChild("PlayerGui")

    -- window frame
    local window = Instance.new("Frame", gui)
    window.Name = "Window"
    window.Size = UDim2.new(0, 680, 0, 480)
    window.Position = UDim2.new(0.5, -340, 0.6, 0)
    window.AnchorPoint = Vector2.new(0.5,0.5)
    window.BackgroundColor3 = Color3.fromRGB(18,18,18)
    window.BorderSizePixel = 0

    local windowCorner = Instance.new("UICorner", window)
    windowCorner.CornerRadius = UDim.new(0, 18)

    local windowStroke = Instance.new("UIStroke", window)
    windowStroke.Color = Color3.fromRGB(36,36,36)
    windowStroke.Thickness = 1

    -- header area
    local header = Instance.new("Frame", window)
    header.Name = "Header"
    header.Size = UDim2.new(1,0,0,64)
    header.Position = UDim2.new(0,0,0,0)
    header.BackgroundTransparency = 1

    local title = Instance.new("TextLabel", header)
    title.Name = "Title"
    title.Size = UDim2.new(0.6,0,1,0)
    title.Position = UDim2.new(0.04,0,0,0)
    title.BackgroundTransparency = 1
    title.Font = Enum.Font.GothamBlack
    title.TextSize = 22
    title.TextColor3 = Color3.fromRGB(255,255,255)
    title.Text = "Karker Hub - Verbose Edition"

    local subtitle = Instance.new("TextLabel", header)
    subtitle.Size = UDim2.new(0.28,0,1,0)
    subtitle.Position = UDim2.new(0.66,0,0,0)
    subtitle.BackgroundTransparency = 1
    subtitle.Font = Enum.Font.Gotham
    subtitle.TextSize = 12
    subtitle.TextColor3 = Color3.fromRGB(160,160,160)
    subtitle.TextXAlignment = Enum.TextXAlignment.Right
    subtitle.Text = "v4.0 - Long Form"

    -- close and minimize
    local closeBtn = Instance.new("TextButton", header)
    closeBtn.Name = "Close"
    closeBtn.Size = UDim2.new(0,44,0,32)
    closeBtn.Position = UDim2.new(1, -56, 0.12, 0)
    closeBtn.BackgroundColor3 = Color3.fromRGB(44,44,44)
    closeBtn.Font = Enum.Font.GothamBold
    closeBtn.Text = "X"
    local closeCorner = Instance.new("UICorner", closeBtn)
    closeCorner.CornerRadius = UDim.new(0,8)

    local minBtn = Instance.new("TextButton", header)
    minBtn.Name = "Minimize"
    minBtn.Size = UDim2.new(0,44,0,32)
    minBtn.Position = UDim2.new(1, -112, 0.12, 0)
    minBtn.BackgroundColor3 = Color3.fromRGB(44,44,44)
    minBtn.Font = Enum.Font.GothamBold
    minBtn.Text = "_"
    local minCorner = Instance.new("UICorner", minBtn)
    minCorner.CornerRadius = UDim.new(0,8)

    -- content area (left navigation + right panels)
    local left = Instance.new("Frame", window)
    left.Name = "LeftPanel"
    left.Size = UDim2.new(0, 220, 1, -92)
    left.Position = UDim2.new(0, 20, 0, 84)
    left.BackgroundTransparency = 1

    local right = Instance.new("Frame", window)
    right.Name = "RightPanel"
    right.Size = UDim2.new(1, -280, 1, -92)
    right.Position = UDim2.new(0, 260, 0, 84)
    right.BackgroundTransparency = 1

    -- left: buttons area with scrolling
    local leftScroll = Instance.new("ScrollingFrame", left)
    leftScroll.Size = UDim2.new(1,0,1,0)
    leftScroll.CanvasSize = UDim2.new(0,0,0,900)
    leftScroll.ScrollBarThickness = 8
    leftScroll.BackgroundTransparency = 1
    local leftLayout = Instance.new("UIListLayout", leftScroll)
    leftLayout.Padding = UDim.new(0,12)
    leftLayout.SortOrder = Enum.SortOrder.LayoutOrder

    -- helper to make very explicit animated buttons
    local function makeAnimatedButton(parent, text, order)
        local container = Instance.new("Frame", parent)
        container.Size = UDim2.new(1,0,0,62)
        container.BackgroundTransparency = 1
        container.LayoutOrder = order or 1

        local btn = Instance.new("TextButton", container)
        btn.Size = UDim2.new(0.96,0,0,56)
        btn.Position = UDim2.new(0.02,0,0,0)
        btn.BackgroundColor3 = Color3.fromRGB(36,36,36)
        btn.BorderSizePixel = 0
        btn.Font = Enum.Font.GothamSemibold
        btn.Text = text
        btn.TextSize = 16
        btn.TextColor3 = Color3.fromRGB(245,245,245)
        btn.AutoButtonColor = false

        local ucorner = Instance.new("UICorner", btn)
        ucorner.CornerRadius = UDim.new(0,10)
        local stroke = Instance.new("UIStroke", btn)
        stroke.Color = Color3.fromRGB(28,28,28)
        stroke.Thickness = 1

        -- hover & click animations
        btn.MouseEnter:Connect(function()
            Tween(btn, 0.14, {BackgroundColor3 = Color3.fromRGB(58,58,58), Size = UDim2.new(0.965,0,0,58)})
        end)
        btn.MouseLeave:Connect(function()
            Tween(btn, 0.14, {BackgroundColor3 = Color3.fromRGB(36,36,36), Size = UDim2.new(0.96,0,0,56)})
        end)
        btn.MouseButton1Down:Connect(function()
            Tween(btn, 0.06, {Size = UDim2.new(0.94,0,0,54)})
        end)
        btn.MouseButton1Up:Connect(function()
            Tween(btn, 0.08, {Size = UDim2.new(0.96,0,0,56)})
        end)

        return btn, container
    end

    -- create many buttons explicitly (to make verbose)
    local b1 = makeAnimatedButton(leftScroll, "Special Sauce", 1)
    local b2 = makeAnimatedButton(leftScroll, "Toggle Float (Jumpable)", 2)
    local b3 = makeAnimatedButton(leftScroll, "Bypass Float (Disable)", 3)
    local b4 = makeAnimatedButton(leftScroll, "Unbypass Float (Allow)", 4)
    local b5 = makeAnimatedButton(leftScroll, "Throw Aura", 5)
    local b6 = makeAnimatedButton(leftScroll, "Server Hop (paste instance)", 6)
    local b7 = makeAnimatedButton(leftScroll, "Executor (placeholder)", 7)
    local b8 = makeAnimatedButton(leftScroll, "Credits", 8)

    -- right: info panel and preview
    local preview = Instance.new("Frame", right)
    preview.Size = UDim2.new(1,0,0,260)
    preview.Position = UDim2.new(0,0,0,0)
    preview.BackgroundColor3 = Color3.fromRGB(20,20,20)
    local pc = Instance.new("UICorner", preview); pc.CornerRadius = UDim.new(0,8)

    local infoTitle = Instance.new("TextLabel", preview)
    infoTitle.Size = UDim2.new(1,-20,0,36)
    infoTitle.Position = UDim2.new(0,10,0,8)
    infoTitle.BackgroundTransparency = 1
    infoTitle.Font = Enum.Font.GothamBold
    infoTitle.TextSize = 18
    infoTitle.TextColor3 = Color3.fromRGB(255,255,255)
    infoTitle.Text = "Preview & Controls"

    local infoBody = Instance.new("TextLabel", preview)
    infoBody.Size = UDim2.new(1,-20,1,-56)
    infoBody.Position = UDim2.new(0,10,0,48)
    infoBody.BackgroundTransparency = 1
    infoBody.Font = Enum.Font.Gotham
    infoBody.TextSize = 14
    infoBody.TextColor3 = Color3.fromRGB(200,200,200)
    infoBody.TextWrapped = true
    infoBody.Text = "Use the left buttons to toggle features. Special Sauce will create an aura that locally tases intruders. For authoritative actions, use a server script with RemoteEvents."

    -- footer & credits
    local foot = Instance.new("TextLabel", window)
    foot.Size = UDim2.new(1,-40,0,28)
    foot.Position = UDim2.new(0,20,1,-40)
    foot.BackgroundTransparency = 1
    foot.Font = Enum.Font.Gotham
    foot.TextSize = 12
    foot.TextColor3 = Color3.fromRGB(150,150,150)
    foot.Text = "Karker Hub - Verbose UI (expanded)"

    -- Draggable header implementation for both PC & Mobile
    do
        local dragging = false
        local dragStart
        local startPos
        header.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                dragging = true
                dragStart = input.Position
                startPos = window.Position
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        dragging = false
                    end
                end)
            end
        end)
        header.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                -- store for move
                -- nothing here - we use global InputChanged
            end
        end)
        UserInputService.InputChanged:Connect(function(input)
            if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
                local delta = input.Position - dragStart
                window.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
            end
        end)
    end

    -- Provide explicit API functions for actions (float, aura, server hop)
    local floatState = {enabled = false, vf = nil, att = nil}
    local function enableFloatVerbose()
        if floatState.enabled then
            notify("Float", "Float already enabled.", 2)
            return
        end
        local character = getCharacter(true)
        local hrp = character:FindFirstChild("HumanoidRootPart")
        if not hrp then notify("Float", "HRP not found.", 2); return end
        local attach = Instance.new("Attachment", hrp)
        attach.Name = "KH_FloatAttach_Verbose"
        local vf = Instance.new("VectorForce", hrp)
        vf.Attachment0 = attach
        vf.RelativeTo = Enum.ActuatorRelativeTo.World
        local mass = hrp:GetMass()
        vf.Force = Vector3.new(0, mass * 196.2 * 0.55, 0)
        floatState = {enabled = true, vf = vf, att = attach}
        notify("Float", "Float enabled (jumpable).", 3)
    end
    local function disableFloatVerbose()
        if floatState.att then pcall(function() floatState.att:Destroy() end) end
        if floatState.vf then pcall(function() floatState.vf:Destroy() end) end
        floatState = {enabled=false, vf=nil, att=nil}
        notify("Float", "Float disabled.", 2)
    end

    -- Throw aura explicit
    local function throwAuraVerbose()
        local character = getCharacter(true)
        local hrp = character:FindFirstChild("HumanoidRootPart")
        if not hrp then notify("Aura", "Character not ready.", 2); return end
        local emitter = Instance.new("ParticleEmitter", hrp)
        emitter.Texture = "rbxassetid://243660277"
        emitter.Rate = 0
        emitter.Lifetime = NumberRange.new(0.6, 1)
        emitter.Speed = NumberRange.new(8, 14)
        emitter.Size = NumberSequence.new(0.8)
        emitter:Emit(45)
        Debris:AddItem(emitter, 1.2)
        local bv = Instance.new("BodyVelocity", hrp)
        bv.MaxForce = Vector3.new(2500,2500,2500)
        bv.Velocity = hrp.CFrame.LookVector * 18 + Vector3.new(0,6,0)
        Debris:AddItem(bv, 0.28)
        notify("Throw Aura", "Aura thrown.", 2)
    end

    -- Special sauce: verbose local aura + scan
    local special = {active=false, radius=24, conns={}, auraPart=nil}
    local function startSpecialVerbose()
        if special.active then notify("Special Sauce","Already active.",2); return end
        local character = getCharacter(true)
        local hrp = character:FindFirstChild("HumanoidRootPart")
        if not hrp then notify("Special Sauce","Character not ready.",2); return end

        -- aura part creation
        local aura = Instance.new("Part")
        aura.Name = "KH_SpecialAura_Verbose"
        aura.Anchored = true
        aura.CanCollide = false
        aura.Size = Vector3.new(special.radius*2 + 8, 1, special.radius*2 + 8)
        aura.Transparency = 1
        aura.Parent = workspace
        special.auraPart = aura

        -- particle ring on aura
        local ring = Instance.new("ParticleEmitter", aura)
        ring.Texture = "rbxassetid://296874371"
        ring.Rate = 45
        ring.Lifetime = NumberRange.new(0.8,1.4)
        ring.Size = NumberSequence.new({NumberSequenceKeypoint.new(0,2.2), NumberSequenceKeypoint.new(1,0)})
        ring.Color = ColorSequence.new(Color3.fromRGB(255,140,30), Color3.fromRGB(255,60,20))
        ring.EmissionDirection = Enum.NormalId.Top

        -- fire light
        local pl = Instance.new("PointLight", aura)
        pl.Brightness = 1.6
        pl.Range = 18
        pl.Color = Color3.fromRGB(255,140,60)

        -- big center notification
        notify("Special Sauce", "huh I see u tryna steal lol", 3)
        task.wait(2)
        notify("Special Sauce", "System active. Scanning for intruders...", 3)

        -- scanning loop
        local last = {}
        local conn = RunService.Heartbeat:Connect(function()
            if not special.active then conn:Disconnect(); return end
            if hrp and aura and aura.Parent then
                aura.CFrame = hrp.CFrame * CFrame.new(0, -3.5, 0)
            end
            for _,plr in ipairs(Players:GetPlayers()) do
                if plr ~= player and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
                    local ohrp = plr.Character.HumanoidRootPart
                    local d = (ohrp.Position - hrp.Position).Magnitude
                    if d <= special.radius then
                        local now = tick()
                        if not last[plr] or (now - last[plr] > 4) then
                            last[plr] = now
                            -- local taser visual
                            local bolt = Instance.new("Part", workspace)
                            bolt.Anchored = true
                            bolt.CanCollide = false
                            bolt.Size = Vector3.new(0.4,0.4,(ohrp.Position - hrp.Position).Magnitude)
                            bolt.CFrame = CFrame.new(hrp.Position, ohrp.Position) * CFrame.new(0,0,-bolt.Size.Z/2) * CFrame.Angles(math.pi/2,0,0)
                            bolt.Material = Enum.Material.Neon
                            bolt.Color = Color3.fromRGB(120,200,255)
                            Debris:AddItem(bolt, 0.28)

                            local spark = Instance.new("ParticleEmitter", ohrp)
                            spark.Texture = "rbxassetid://256249139"
                            spark.Rate = 0
                            spark:Emit(40)
                            Debris:AddItem(spark, 0.6)

                            -- notify local: whom was affected
                            notify("Taser", plr.Name .. " triggered the aura (local visual)", 2)

                            -- NOTE: this is local visual only. To affect other players server-side, use RemoteEvent and server script.
                        end
                    end
                end
            end
        end)

        table.insert(special.conns, conn)
        special.active = true

        -- auto stop after 90 seconds
        task.delay(90, function()
            if special.active then
                for _,c in ipairs(special.conns) do if c then pcall(function() c:Disconnect() end) end end
                if special.auraPart and special.auraPart.Parent then special.auraPart:Destroy() end
                special = {active=false, radius=24, conns={}, auraPart=nil}
                notify("Special Sauce","Special system auto-stopped.",2)
            end
        end)
    end

    local function stopSpecialVerbose()
        for _,c in ipairs(special.conns) do if c then pcall(function() c:Disconnect() end) end end
        special.conns = {}
        if special.auraPart and special.auraPart.Parent then special.auraPart:Destroy() end
        special = {active=false, radius=24, conns={}, auraPart=nil}
        notify("Special Sauce","Stopped.",2)
    end

    -- wire button actions
    b1.MouseButton1Click:Connect(function() startSpecialVerbose() end)
    b2.MouseButton1Click:Connect(function()
        if floatState.enabled then disableFloatVerbose() else enableFloatVerbose() end
    end)
    b3.MouseButton1Click:Connect(function() disableFloatVerbose(); notify("Bypass","Float disabled (bypassed).",3) end)
    b4.MouseButton1Click:Connect(function() notify("Bypass","Float allowed. Enable manually.",3) end)
    b5.MouseButton1Click:Connect(function() throwAuraVerbose() end)
    b6.MouseButton1Click:Connect(function()
        notify("Server Hop","Paste a server instance ID in the in-game chat to use TeleportService manually.",6)
    end)
    b7.MouseButton1Click:Connect(function() notify("Executor","Executor placeholder (not included).",3) end)
    b8.MouseButton1Click:Connect(function() notify("Credits","Created by YOUNG - Verbose Edition",4) end)

    -- close behavior
    closeBtn.MouseButton1Click:Connect(function()
        Tween(window, 0.34, {Position = UDim2.new(0.5, -340, 1.6, 0)})
        task.delay(0.34, function() gui:Destroy() end)
    end)

    -- minimize behavior
    local minimized = false
    minBtn.MouseButton1Click:Connect(function()
        minimized = not minimized
        if minimized then
            Tween(window, 0.26, {Size = UDim2.new(0,680,0,96)})
        else
            Tween(window, 0.26, {Size = UDim2.new(0,680,0,480)})
        end
    end)

    -- slide in animation
    Tween(window, 0.6, {Position = UDim2.new(0.5, -340, 0.5, 0) }, Enum.EasingStyle.Quint)

    return gui
end

-- =====================================================================
-- SECTION 5: STARTUP - Wait until loading GUI is gone, then spawn main GUI
-- =====================================================================
-- We'll poll for the loading GUI removal (this is verbose but reliable)
spawn(function()
    -- wait until the loading GUI previously created is removed
    while true do
        local found = player.PlayerGui:FindFirstChild("KH_Loading_Verbose")
        if not found then break end
        task.wait(0.2)
    end
    -- now create main GUI
    createMainGui()
end)

-- =====================================================================
-- END OF FILE - Verbose Edition
-- This file is intentionally expanded and includes many explicit steps and repeated code
-- so you can see each GUI element and action individually.
-- If you want a trimmed/optimized version, use the compact script provided separately.
-- =====================================================================
